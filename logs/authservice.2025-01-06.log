{"@timestamp":"2025-01-06T15:32:26.144046+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:32:26.155543+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=bd962f600851baee1351b456def3c80b8e01b01d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:32:26.155778+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:32:26.155892+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=bd962f600851baee1351b456def3c80b8e01b01d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:32:26.166832+07:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: \nERROR in ch.qos.logback.core.model.util.VariableSubstitutionsHelper@2c86b0ea - Problem while parsing [%yellow(%d{dd-MM-yyyy HH:mm:ss.SSS}) %highlight([%-5level]) %replace(%X{trace_id}){'^$', ''}traceId=%X{trace_id} %replace(%X{span_id}){'^$', ''}spanId=%X{span_id %logger{46}.%M - %msg%n] java.lang.IllegalArgumentException: All tokens consumed but was expecting \"}\"\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:347)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)\n\tat org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)\n\tat org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)\n\tat org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)\n\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)\n\tat org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)\n\tat org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:353)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:313)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)\n\tat ntcgoer.authservice.AuthserviceApplication.main(AuthserviceApplication.java:16)\nCaused by: java.lang.IllegalStateException: Logback configuration error detected: \nERROR in ch.qos.logback.core.model.util.VariableSubstitutionsHelper@2c86b0ea - Problem while parsing [%yellow(%d{dd-MM-yyyy HH:mm:ss.SSS}) %highlight([%-5level]) %replace(%X{trace_id}){'^$', ''}traceId=%X{trace_id} %replace(%X{span_id}){'^$', ''}spanId=%X{span_id %logger{46}.%M - %msg%n] java.lang.IllegalArgumentException: All tokens consumed but was expecting \"}\"\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.reportConfigurationErrorsIfNecessary(LogbackLoggingSystem.java:291)\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:269)\n\tat org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:81)\n\tat org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:61)\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:197)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:332)\n\t... 19 common frames omitted\n\tSuppressed: java.lang.IllegalArgumentException: All tokens consumed but was expecting \"}\"\n\t\tat ch.qos.logback.core.subst.Parser.expectNotNull(Parser.java:160)\n\t\tat ch.qos.logback.core.subst.Parser.expectCurlyRight(Parser.java:165)\n\t\tat ch.qos.logback.core.subst.Parser.T(Parser.java:93)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:58)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.parse(Parser.java:54)\n\t\tat ch.qos.logback.core.subst.NodeToStringTransformer.tokenizeAndParseString(NodeToStringTransformer.java:59)\n\t\tat ch.qos.logback.core.subst.NodeToStringTransformer.substituteVariable(NodeToStringTransformer.java:50)\n\t\tat ch.qos.logback.core.util.OptionHelper.substVars(OptionHelper.java:112)\n\t\tat ch.qos.logback.core.model.util.VariableSubstitutionsHelper.subst(VariableSubstitutionsHelper.java:52)\n\t\tat ch.qos.logback.core.model.processor.ModelInterpretationContext.subst(ModelInterpretationContext.java:167)\n\t\tat ch.qos.logback.core.model.processor.ImplicitModelHandler.doBasicProperty(ImplicitModelHandler.java:105)\n\t\tat ch.qos.logback.core.model.processor.ImplicitModelHandler.handle(ImplicitModelHandler.java:86)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:241)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:253)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:253)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:253)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.traversalLoop(DefaultProcessor.java:90)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.process(DefaultProcessor.java:106)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.processModel(GenericXMLConfigurator.java:222)\n\t\tat org.springframework.boot.logging.logback.SpringBootJoranConfigurator.processModel(SpringBootJoranConfigurator.java:136)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.doConfigure(GenericXMLConfigurator.java:178)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.doConfigure(GenericXMLConfigurator.java:123)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.doConfigure(GenericXMLConfigurator.java:66)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.configureByResourceUrl(LogbackLoggingSystem.java:300)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.lambda$loadConfiguration$2(LogbackLoggingSystem.java:262)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.withLoggingSuppressed(LogbackLoggingSystem.java:483)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:255)\n\t\t... 23 common frames omitted\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:50:52.385536+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:50:52.396094+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=6b92da62847595a6a3eb48e0d4b4464a3e5ce4da, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:50:52.39632+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:50:52.396434+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=6b92da62847595a6a3eb48e0d4b4464a3e5ce4da, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:50:52.406353+07:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: \nERROR in ch.qos.logback.core.model.util.VariableSubstitutionsHelper@4c6eaa65 - Problem while parsing [%yellow(%d{dd-MM-yyyy HH:mm:ss.SSS}) %highlight([%-5level]) %replace(%X{trace_id}){'^$', ''}traceId=%X{trace_id} %replace(%X{span_id}){'^$', ''}spanId=%X{span_id %logger{46}.%M - %msg%n] java.lang.IllegalArgumentException: All tokens consumed but was expecting \"}\"\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:347)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)\n\tat org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)\n\tat org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)\n\tat org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)\n\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)\n\tat org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)\n\tat org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:353)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:313)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)\n\tat ntcgoer.authservice.AuthserviceApplication.main(AuthserviceApplication.java:16)\nCaused by: java.lang.IllegalStateException: Logback configuration error detected: \nERROR in ch.qos.logback.core.model.util.VariableSubstitutionsHelper@4c6eaa65 - Problem while parsing [%yellow(%d{dd-MM-yyyy HH:mm:ss.SSS}) %highlight([%-5level]) %replace(%X{trace_id}){'^$', ''}traceId=%X{trace_id} %replace(%X{span_id}){'^$', ''}spanId=%X{span_id %logger{46}.%M - %msg%n] java.lang.IllegalArgumentException: All tokens consumed but was expecting \"}\"\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.reportConfigurationErrorsIfNecessary(LogbackLoggingSystem.java:291)\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:269)\n\tat org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:81)\n\tat org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:61)\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:197)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:332)\n\t... 19 common frames omitted\n\tSuppressed: java.lang.IllegalArgumentException: All tokens consumed but was expecting \"}\"\n\t\tat ch.qos.logback.core.subst.Parser.expectNotNull(Parser.java:160)\n\t\tat ch.qos.logback.core.subst.Parser.expectCurlyRight(Parser.java:165)\n\t\tat ch.qos.logback.core.subst.Parser.T(Parser.java:93)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:58)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.parse(Parser.java:54)\n\t\tat ch.qos.logback.core.subst.NodeToStringTransformer.tokenizeAndParseString(NodeToStringTransformer.java:59)\n\t\tat ch.qos.logback.core.subst.NodeToStringTransformer.substituteVariable(NodeToStringTransformer.java:50)\n\t\tat ch.qos.logback.core.util.OptionHelper.substVars(OptionHelper.java:112)\n\t\tat ch.qos.logback.core.model.util.VariableSubstitutionsHelper.subst(VariableSubstitutionsHelper.java:52)\n\t\tat ch.qos.logback.core.model.processor.ModelInterpretationContext.subst(ModelInterpretationContext.java:167)\n\t\tat ch.qos.logback.core.model.processor.ImplicitModelHandler.doBasicProperty(ImplicitModelHandler.java:105)\n\t\tat ch.qos.logback.core.model.processor.ImplicitModelHandler.handle(ImplicitModelHandler.java:86)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:241)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:253)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:253)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:253)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.traversalLoop(DefaultProcessor.java:90)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.process(DefaultProcessor.java:106)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.processModel(GenericXMLConfigurator.java:222)\n\t\tat org.springframework.boot.logging.logback.SpringBootJoranConfigurator.processModel(SpringBootJoranConfigurator.java:136)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.doConfigure(GenericXMLConfigurator.java:178)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.doConfigure(GenericXMLConfigurator.java:123)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.doConfigure(GenericXMLConfigurator.java:66)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.configureByResourceUrl(LogbackLoggingSystem.java:300)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.lambda$loadConfiguration$2(LogbackLoggingSystem.java:262)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.withLoggingSuppressed(LogbackLoggingSystem.java:483)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:255)\n\t\t... 23 common frames omitted\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:52:07.961202+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:52:07.968235+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=6b92da62847595a6a3eb48e0d4b4464a3e5ce4da, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:52:07.968476+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:52:07.968592+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=6b92da62847595a6a3eb48e0d4b4464a3e5ce4da, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:52:07.989112+07:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: \nERROR in ch.qos.logback.core.model.util.VariableSubstitutionsHelper@72c175f1 - Problem while parsing [%yellow(%d{dd-MM-yyyy HH:mm:ss.SSS}) %highlight([%-5level]) %replace(%X{trace_id}){'^$', ''}traceId=%X{trace_id} %replace(%X{span_id}){'^$', ''}spanId=%X{span_id %logger{46}.%M - %msg%n] java.lang.IllegalArgumentException: All tokens consumed but was expecting \"}\"\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:347)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)\n\tat org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)\n\tat org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)\n\tat org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)\n\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)\n\tat org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)\n\tat org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:353)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:313)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)\n\tat ntcgoer.authservice.AuthserviceApplication.main(AuthserviceApplication.java:16)\nCaused by: java.lang.IllegalStateException: Logback configuration error detected: \nERROR in ch.qos.logback.core.model.util.VariableSubstitutionsHelper@72c175f1 - Problem while parsing [%yellow(%d{dd-MM-yyyy HH:mm:ss.SSS}) %highlight([%-5level]) %replace(%X{trace_id}){'^$', ''}traceId=%X{trace_id} %replace(%X{span_id}){'^$', ''}spanId=%X{span_id %logger{46}.%M - %msg%n] java.lang.IllegalArgumentException: All tokens consumed but was expecting \"}\"\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.reportConfigurationErrorsIfNecessary(LogbackLoggingSystem.java:291)\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:269)\n\tat org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:81)\n\tat org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:61)\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:197)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:332)\n\t... 19 common frames omitted\n\tSuppressed: java.lang.IllegalArgumentException: All tokens consumed but was expecting \"}\"\n\t\tat ch.qos.logback.core.subst.Parser.expectNotNull(Parser.java:160)\n\t\tat ch.qos.logback.core.subst.Parser.expectCurlyRight(Parser.java:165)\n\t\tat ch.qos.logback.core.subst.Parser.T(Parser.java:93)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:58)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.Eopt(Parser.java:75)\n\t\tat ch.qos.logback.core.subst.Parser.E(Parser.java:62)\n\t\tat ch.qos.logback.core.subst.Parser.parse(Parser.java:54)\n\t\tat ch.qos.logback.core.subst.NodeToStringTransformer.tokenizeAndParseString(NodeToStringTransformer.java:59)\n\t\tat ch.qos.logback.core.subst.NodeToStringTransformer.substituteVariable(NodeToStringTransformer.java:50)\n\t\tat ch.qos.logback.core.util.OptionHelper.substVars(OptionHelper.java:112)\n\t\tat ch.qos.logback.core.model.util.VariableSubstitutionsHelper.subst(VariableSubstitutionsHelper.java:52)\n\t\tat ch.qos.logback.core.model.processor.ModelInterpretationContext.subst(ModelInterpretationContext.java:167)\n\t\tat ch.qos.logback.core.model.processor.ImplicitModelHandler.doBasicProperty(ImplicitModelHandler.java:105)\n\t\tat ch.qos.logback.core.model.processor.ImplicitModelHandler.handle(ImplicitModelHandler.java:86)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:241)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:253)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:253)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.secondPhaseTraverse(DefaultProcessor.java:253)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.traversalLoop(DefaultProcessor.java:90)\n\t\tat ch.qos.logback.core.model.processor.DefaultProcessor.process(DefaultProcessor.java:106)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.processModel(GenericXMLConfigurator.java:222)\n\t\tat org.springframework.boot.logging.logback.SpringBootJoranConfigurator.processModel(SpringBootJoranConfigurator.java:136)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.doConfigure(GenericXMLConfigurator.java:178)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.doConfigure(GenericXMLConfigurator.java:123)\n\t\tat ch.qos.logback.core.joran.GenericXMLConfigurator.doConfigure(GenericXMLConfigurator.java:66)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.configureByResourceUrl(LogbackLoggingSystem.java:300)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.lambda$loadConfiguration$2(LogbackLoggingSystem.java:262)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.withLoggingSuppressed(LogbackLoggingSystem.java:483)\n\t\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:255)\n\t\t... 23 common frames omitted\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:16.292467+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:16.329026+07:00","@version":"1","message":"Starting AuthserviceApplication using Java 23.0.1 with PID 17648 (/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:16.32969+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:16.352055+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:16.352383+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=6b92da62847595a6a3eb48e0d4b4464a3e5ce4da, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:16.352539+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:16.352655+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=6b92da62847595a6a3eb48e0d4b4464a3e5ce4da, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:16.990925+07:00","@version":"1","message":"BeanFactory id=07fdea24-e100-3cc1-8bb4-27aa59010926","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.161334+07:00","@version":"1","message":"Tomcat initialized with port 8101 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.173618+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.176144+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.176349+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.210397+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.211053+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 857 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.315637+07:00","@version":"1","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, otelAutoDispatcherFilter urls=[/*] order=-2147483647, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.31597+07:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.33238+07:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.502537+07:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authController' defined in file [/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes/ntcgoer/authservice/controller/AuthController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'signupServiceImpl' defined in file [/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes/ntcgoer/authservice/service/impl/SignupServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'getJwtUtil' defined in class path resource [ntcgoer/authservice/configuration/JwtConfiguration.class]: Failed to instantiate [ntcgoer.sharingmodule.util.JwtUtil]: Factory method 'getJwtUtil' threw exception with message: The Secret cannot be null","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.505937+07:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.522682+07:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:53:17.530944+07:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authController' defined in file [/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes/ntcgoer/authservice/controller/AuthController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'signupServiceImpl' defined in file [/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes/ntcgoer/authservice/service/impl/SignupServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'getJwtUtil' defined in class path resource [ntcgoer/authservice/configuration/JwtConfiguration.class]: Failed to instantiate [ntcgoer.sharingmodule.util.JwtUtil]: Factory method 'getJwtUtil' threw exception with message: The Secret cannot be null\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)\n\tat ntcgoer.authservice.AuthserviceApplication.main(AuthserviceApplication.java:16)\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'signupServiceImpl' defined in file [/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes/ntcgoer/authservice/service/impl/SignupServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'getJwtUtil' defined in class path resource [ntcgoer/authservice/configuration/JwtConfiguration.class]: Failed to instantiate [ntcgoer.sharingmodule.util.JwtUtil]: Factory method 'getJwtUtil' threw exception with message: The Secret cannot be null\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n\t... 21 common frames omitted\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'getJwtUtil' defined in class path resource [ntcgoer/authservice/configuration/JwtConfiguration.class]: Failed to instantiate [ntcgoer.sharingmodule.util.JwtUtil]: Factory method 'getJwtUtil' threw exception with message: The Secret cannot be null\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:489)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1357)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n\t... 35 common frames omitted\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [ntcgoer.sharingmodule.util.JwtUtil]: Factory method 'getJwtUtil' threw exception with message: The Secret cannot be null\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\n\t... 49 common frames omitted\nCaused by: java.lang.IllegalArgumentException: The Secret cannot be null\n\tat com.auth0.jwt.algorithms.HMACAlgorithm.getSecretBytes(HMACAlgorithm.java:45)\n\tat com.auth0.jwt.algorithms.HMACAlgorithm.<init>(HMACAlgorithm.java:39)\n\tat com.auth0.jwt.algorithms.Algorithm.HMAC256(Algorithm.java:140)\n\tat ntcgoer.sharingmodule.util.JwtUtil.<init>(JwtUtil.java:20)\n\tat ntcgoer.authservice.configuration.JwtConfiguration.getJwtUtil(JwtConfiguration.java:19)\n\tat ntcgoer.authservice.configuration.JwtConfiguration$$SpringCGLIB$$0.CGLIB$getJwtUtil$0(<generated>)\n\tat ntcgoer.authservice.configuration.JwtConfiguration$$SpringCGLIB$$FastClass$$1.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:348)\n\tat ntcgoer.authservice.configuration.JwtConfiguration$$SpringCGLIB$$0.getJwtUtil(<generated>)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)\n\t... 52 common frames omitted\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:30.374831+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:30.420657+07:00","@version":"1","message":"Starting AuthserviceApplication using Java 23.0.1 with PID 17994 (/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:30.421331+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:30.440358+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:30.440793+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=6fab562e0a9be5a1f9c3513e80ebd6f39c558f2d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:30.440953+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:30.441063+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=6fab562e0a9be5a1f9c3513e80ebd6f39c558f2d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.16201+07:00","@version":"1","message":"BeanFactory id=07fdea24-e100-3cc1-8bb4-27aa59010926","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.354609+07:00","@version":"1","message":"Tomcat initialized with port 8101 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.366386+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.368286+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.368458+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.402125+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.402764+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 958 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.489253+07:00","@version":"1","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, otelAutoDispatcherFilter urls=[/*] order=-2147483647, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.489581+07:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.50924+07:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.819588+07:00","@version":"1","message":"For 'userservice' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.893788+07:00","@version":"1","message":"7 mappings in 'requestMappingHandlerMapping'","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:31.92701+07:00","@version":"1","message":"Patterns [/webjars/**, /**, /authservice/swagger-ui*/*swagger-initializer.js, /authservice/swagger-ui*/**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.013128+07:00","@version":"1","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.036968+07:00","@version":"1","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.265897+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.29042+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.298242+07:00","@version":"1","message":"Exposing 17 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.341383+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.355484+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.357528+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.363956+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.364166+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.364296+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.364386+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.364471+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.36455+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.36463+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.416276+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.449517+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.484952+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.4865+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.507164+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.511321+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.515564+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.517023+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1736153912516 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.520227+07:00","@version":"1","message":"Registering application AUTHSERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.520656+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736153912520, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.525607+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.526728+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.530338+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.53241+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.544578+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = UP, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@3a627cb1] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.562264+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.562337+07:00","@version":"1","message":"Tomcat started on port 8101 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.563092+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.563305+07:00","@version":"1","message":"Updating port to 8101","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:32.582199+07:00","@version":"1","message":"Started AuthserviceApplication in 5.825 seconds (process running for 15.55)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:58:51.743771+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8101-exec-2","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.744522+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.7448+07:00","@version":"1","message":"Detected StandardServletMultipartResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.744964+07:00","@version":"1","message":"Detected AcceptHeaderLocaleResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.745077+07:00","@version":"1","message":"Detected FixedThemeResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.74704+07:00","@version":"1","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5f16cff5","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.747359+07:00","@version":"1","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@51a84169","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.747667+07:00","@version":"1","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.747873+07:00","@version":"1","message":"Completed initialization in 3 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.76564+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.770594+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.791118+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@6805f616]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:58:51.818141+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@6805f616","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-2","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:59:02.516857+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:02.517025+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:02.517943+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:02.520254+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:02.521688+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:02.521883+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:02.52428+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:02.579418+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:59:45.100681+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:45.120991+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:45.124926+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:45.124958+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:45.132042+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:45.132069+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:45.132284+07:00","@version":"1","message":"Using @ExceptionHandler ntcgoer.sharingmodule.exception.advice.GlobalExceptionHandler#handleFeignException(FeignException)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:59:45.132539+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T15:59:45.142939+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:59:45.143727+07:00","@version":"1","message":"Writing [ntcgoer.sharingmodule.exception.advice.HttpResponse@9e11db1]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:59:45.148633+07:00","@version":"1","message":"Resolved [feign.FeignException$InternalServerError: [500] during [POST] to [http://userservice/v1/accounts] [UserFeignClient#CreateSignupData(CreateSignupDataClientRequest)]: [{\"timestamp\":\"2025-01-06T08:59:28.546+00:00\",\"status\":500,\"error\":\"Internal Server Error\",\"path\":\"/v1/accounts\"}]]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T15:59:45.149083+07:00","@version":"1","message":"Completed 500 INTERNAL_SERVER_ERROR","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"fa89f35388de0dc88686afd1b351f9c9","trace_flags":"01","span_id":"7ef4479704eaaec9"}
{"@timestamp":"2025-01-06T16:00:15.137445+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:15.137446+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:15.144354+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:15.144354+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:15.150415+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:15.150415+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:15.151041+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:44.922772+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"b8d28a441aa0b7791c24774c426676db","trace_flags":"01","span_id":"72822dc61350b712"}
{"@timestamp":"2025-01-06T16:00:44.927654+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"b8d28a441aa0b7791c24774c426676db","trace_flags":"01","span_id":"72822dc61350b712"}
{"@timestamp":"2025-01-06T16:00:44.93203+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@6e1c6486]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"b8d28a441aa0b7791c24774c426676db","trace_flags":"01","span_id":"72822dc61350b712"}
{"@timestamp":"2025-01-06T16:00:44.933999+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@6e1c6486","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-4","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"b8d28a441aa0b7791c24774c426676db","trace_flags":"01","span_id":"72822dc61350b712"}
{"@timestamp":"2025-01-06T16:00:46.810503+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:46.81002+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:46.812698+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:46.812698+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:46.821262+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:46.821262+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:46.822224+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:00:46.868142+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"b8d28a441aa0b7791c24774c426676db","trace_flags":"01","span_id":"72822dc61350b712"}
{"@timestamp":"2025-01-06T16:01:16.829865+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:16.829865+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:16.836244+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:16.837213+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:16.844125+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:16.844125+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:16.845347+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:46.85103+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:46.85103+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:46.859861+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:46.859861+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:46.868483+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:46.868483+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:46.869528+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:01:46.978359+07:00","@version":"1","message":"Using @ExceptionHandler ntcgoer.sharingmodule.exception.advice.GlobalExceptionHandler#handleFeignException(FeignException)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"b8d28a441aa0b7791c24774c426676db","trace_flags":"01","span_id":"72822dc61350b712"}
{"@timestamp":"2025-01-06T16:01:46.979587+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"b8d28a441aa0b7791c24774c426676db","trace_flags":"01","span_id":"72822dc61350b712"}
{"@timestamp":"2025-01-06T16:01:46.979995+07:00","@version":"1","message":"Writing [ntcgoer.sharingmodule.exception.advice.HttpResponse@71e27672]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"b8d28a441aa0b7791c24774c426676db","trace_flags":"01","span_id":"72822dc61350b712"}
{"@timestamp":"2025-01-06T16:01:46.981152+07:00","@version":"1","message":"Resolved [feign.RetryableException: Read timed out executing POST http://userservice/v1/accounts]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"b8d28a441aa0b7791c24774c426676db","trace_flags":"01","span_id":"72822dc61350b712"}
{"@timestamp":"2025-01-06T16:01:46.981526+07:00","@version":"1","message":"Completed 500 INTERNAL_SERVER_ERROR","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"b8d28a441aa0b7791c24774c426676db","trace_flags":"01","span_id":"72822dc61350b712"}
{"@timestamp":"2025-01-06T16:02:16.873539+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:16.874803+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:16.877441+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:16.877749+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:16.88504+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:16.885861+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:16.885711+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:46.895656+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:46.895655+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:46.903536+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:46.903536+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:46.918009+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:46.918067+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:46.920332+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:02:52.20465+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"590f64650995aefed751490abf4d34ab","trace_flags":"01","span_id":"3fd564c544a0f8ca"}
{"@timestamp":"2025-01-06T16:02:52.207519+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"590f64650995aefed751490abf4d34ab","trace_flags":"01","span_id":"3fd564c544a0f8ca"}
{"@timestamp":"2025-01-06T16:02:52.21016+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@74cdcf7e]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"590f64650995aefed751490abf4d34ab","trace_flags":"01","span_id":"3fd564c544a0f8ca"}
{"@timestamp":"2025-01-06T16:02:52.212625+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@74cdcf7e","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-5","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"590f64650995aefed751490abf4d34ab","trace_flags":"01","span_id":"3fd564c544a0f8ca"}
{"@timestamp":"2025-01-06T16:02:55.138057+07:00","@version":"1","message":"No servers available for service: userservice","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8101-exec-5","level":"WARN","level_value":30000,"serviceName":"authservice","trace_id":"590f64650995aefed751490abf4d34ab","trace_flags":"01","span_id":"3fd564c544a0f8ca"}
{"@timestamp":"2025-01-06T16:02:55.141211+07:00","@version":"1","message":"Service instance was not resolved, executing the original request","logger_name":"org.springframework.cloud.openfeign.loadbalancer.RetryableFeignBlockingLoadBalancerClient","thread_name":"http-nio-8101-exec-5","level":"WARN","level_value":30000,"serviceName":"authservice","trace_id":"590f64650995aefed751490abf4d34ab","trace_flags":"01","span_id":"3fd564c544a0f8ca"}
{"@timestamp":"2025-01-06T16:02:55.199213+07:00","@version":"1","message":"Using @ExceptionHandler ntcgoer.sharingmodule.exception.advice.GlobalExceptionHandler#handleFeignException(FeignException)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"590f64650995aefed751490abf4d34ab","trace_flags":"01","span_id":"3fd564c544a0f8ca"}
{"@timestamp":"2025-01-06T16:02:55.199979+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"590f64650995aefed751490abf4d34ab","trace_flags":"01","span_id":"3fd564c544a0f8ca"}
{"@timestamp":"2025-01-06T16:02:55.20024+07:00","@version":"1","message":"Writing [ntcgoer.sharingmodule.exception.advice.HttpResponse@1f28ccaa]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"590f64650995aefed751490abf4d34ab","trace_flags":"01","span_id":"3fd564c544a0f8ca"}
{"@timestamp":"2025-01-06T16:02:55.200975+07:00","@version":"1","message":"Resolved [feign.RetryableException: userservice executing POST http://userservice/v1/accounts/verify-signup-data]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"590f64650995aefed751490abf4d34ab","trace_flags":"01","span_id":"3fd564c544a0f8ca"}
{"@timestamp":"2025-01-06T16:02:55.201161+07:00","@version":"1","message":"Completed 500 INTERNAL_SERVER_ERROR","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"590f64650995aefed751490abf4d34ab","trace_flags":"01","span_id":"3fd564c544a0f8ca"}
{"@timestamp":"2025-01-06T16:03:16.95025+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:03:16.950238+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:03:16.954903+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:03:16.954903+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:03:16.961219+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:03:16.961294+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:03:16.962349+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:03:32.370208+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:03:38.447714+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"706e0af50870cb6447dff1dc2d773f45","trace_flags":"01","span_id":"2da1deafd3446fe2"}
{"@timestamp":"2025-01-06T16:03:38.452155+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"706e0af50870cb6447dff1dc2d773f45","trace_flags":"01","span_id":"2da1deafd3446fe2"}
{"@timestamp":"2025-01-06T16:03:38.454767+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@2a36d40f]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"706e0af50870cb6447dff1dc2d773f45","trace_flags":"01","span_id":"2da1deafd3446fe2"}
{"@timestamp":"2025-01-06T16:03:38.455853+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@2a36d40f","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-8","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"706e0af50870cb6447dff1dc2d773f45","trace_flags":"01","span_id":"2da1deafd3446fe2"}
{"@timestamp":"2025-01-06T16:05:48.263792+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:05:48.264611+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:05:48.775852+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:05:48.775923+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:05:48.826076+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:05:48.826116+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:05:48.826679+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:05:49.033651+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"706e0af50870cb6447dff1dc2d773f45","trace_flags":"01","span_id":"2da1deafd3446fe2"}
{"@timestamp":"2025-01-06T16:06:18.835547+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:18.835547+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:18.844096+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:18.844218+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:18.853918+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:18.853919+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:18.854986+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:48.864615+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:48.864615+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:48.87367+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:48.87367+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:48.883197+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:48.883197+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:06:48.884587+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:06.73455+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:06.73455+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:06.742561+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:06.742561+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:06.741858+07:00","@version":"1","message":"Using @ExceptionHandler ntcgoer.sharingmodule.exception.advice.GlobalExceptionHandler#handleFeignException(FeignException)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"706e0af50870cb6447dff1dc2d773f45","trace_flags":"01","span_id":"2da1deafd3446fe2"}
{"@timestamp":"2025-01-06T16:08:06.744706+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"706e0af50870cb6447dff1dc2d773f45","trace_flags":"01","span_id":"2da1deafd3446fe2"}
{"@timestamp":"2025-01-06T16:08:06.745364+07:00","@version":"1","message":"Writing [ntcgoer.sharingmodule.exception.advice.HttpResponse@5e3da4d]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"706e0af50870cb6447dff1dc2d773f45","trace_flags":"01","span_id":"2da1deafd3446fe2"}
{"@timestamp":"2025-01-06T16:08:06.756881+07:00","@version":"1","message":"Resolved [feign.FeignException$InternalServerError: [500] during [POST] to [http://userservice/v1/accounts] [UserFeignClient#CreateSignupData(CreateSignupDataClientRequest)]: [{\"timestamp\":\"2025-01-06T09:06:50.090+00:00\",\"status\":500,\"error\":\"Internal Server Error\",\"path\":\"/v1/accounts\"}]]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"706e0af50870cb6447dff1dc2d773f45","trace_flags":"01","span_id":"2da1deafd3446fe2"}
{"@timestamp":"2025-01-06T16:08:06.760372+07:00","@version":"1","message":"Completed 500 INTERNAL_SERVER_ERROR","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"706e0af50870cb6447dff1dc2d773f45","trace_flags":"01","span_id":"2da1deafd3446fe2"}
{"@timestamp":"2025-01-06T16:08:06.779924+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:06.779881+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:06.780878+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:14.065746+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"20eb313784a6c93799af84e5f78feef8","trace_flags":"01","span_id":"4542bbcc98971e90"}
{"@timestamp":"2025-01-06T16:08:14.070164+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"20eb313784a6c93799af84e5f78feef8","trace_flags":"01","span_id":"4542bbcc98971e90"}
{"@timestamp":"2025-01-06T16:08:14.072482+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@4226998d]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"20eb313784a6c93799af84e5f78feef8","trace_flags":"01","span_id":"4542bbcc98971e90"}
{"@timestamp":"2025-01-06T16:08:14.074578+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@4226998d","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-10","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"20eb313784a6c93799af84e5f78feef8","trace_flags":"01","span_id":"4542bbcc98971e90"}
{"@timestamp":"2025-01-06T16:08:17.015565+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"20eb313784a6c93799af84e5f78feef8","trace_flags":"01","span_id":"4542bbcc98971e90"}
{"@timestamp":"2025-01-06T16:08:32.377455+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:36.793114+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:36.793145+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:36.813962+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:36.813787+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:36.845292+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:36.846085+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:36.847991+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:08:38.705718+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"20eb313784a6c93799af84e5f78feef8","trace_flags":"01","span_id":"4542bbcc98971e90"}
{"@timestamp":"2025-01-06T16:09:20.876422+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:20.876458+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:20.893431+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:20.893726+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:20.904553+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:20.904496+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:20.906229+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:58.000966+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:58.000755+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:58.00812+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:58.00812+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:58.021035+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:58.021035+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:58.021768+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:09:58.092716+07:00","@version":"1","message":"Attempting to connect to: [localhost:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-10","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"20eb313784a6c93799af84e5f78feef8","trace_flags":"01","span_id":"4542bbcc98971e90"}
{"@timestamp":"2025-01-06T16:09:58.507717+07:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#6626ae40:0/SimpleConnection@6d08c993 [delegate=amqp://sa@127.0.0.1:5672/, localPort=59051]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-10","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"20eb313784a6c93799af84e5f78feef8","trace_flags":"01","span_id":"4542bbcc98971e90"}
{"@timestamp":"2025-01-06T16:10:00.126391+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"20eb313784a6c93799af84e5f78feef8","trace_flags":"01","span_id":"4542bbcc98971e90"}
{"@timestamp":"2025-01-06T16:10:00.126733+07:00","@version":"1","message":"Nothing to write: null body","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"20eb313784a6c93799af84e5f78feef8","trace_flags":"01","span_id":"4542bbcc98971e90"}
{"@timestamp":"2025-01-06T16:10:00.127337+07:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"20eb313784a6c93799af84e5f78feef8","trace_flags":"01","span_id":"4542bbcc98971e90"}
{"@timestamp":"2025-01-06T16:10:28.02512+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:28.02512+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:28.027575+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:28.027575+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:28.043071+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:28.043071+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:28.044618+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:58.05419+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:58.05419+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:58.063252+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:58.063252+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:58.080753+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:58.080753+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:10:58.081588+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:28.0897+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:28.0897+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:28.095705+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:28.095705+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:28.113686+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:28.113675+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:28.114646+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:58.119118+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:58.119566+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:58.125766+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:58.125766+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:58.162314+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:58.162314+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:11:58.163563+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:12:07.640803+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"424c4fe4b5ca84bb920bd8892ca242f1","trace_flags":"01","span_id":"e3e407248c1bf483"}
{"@timestamp":"2025-01-06T16:12:07.665143+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"424c4fe4b5ca84bb920bd8892ca242f1","trace_flags":"01","span_id":"e3e407248c1bf483"}
{"@timestamp":"2025-01-06T16:12:07.667758+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@3c7d2fb8]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"424c4fe4b5ca84bb920bd8892ca242f1","trace_flags":"01","span_id":"e3e407248c1bf483"}
{"@timestamp":"2025-01-06T16:12:07.669357+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@3c7d2fb8","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-3","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"424c4fe4b5ca84bb920bd8892ca242f1","trace_flags":"01","span_id":"e3e407248c1bf483"}
{"@timestamp":"2025-01-06T16:12:09.957656+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"424c4fe4b5ca84bb920bd8892ca242f1","trace_flags":"01","span_id":"e3e407248c1bf483"}
{"@timestamp":"2025-01-06T16:12:13.226954+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"424c4fe4b5ca84bb920bd8892ca242f1","trace_flags":"01","span_id":"e3e407248c1bf483"}
{"@timestamp":"2025-01-06T16:12:36.804447+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:12:36.804447+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:12:36.811113+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:12:36.811113+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:12:36.81289+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"424c4fe4b5ca84bb920bd8892ca242f1","trace_flags":"01","span_id":"e3e407248c1bf483"}
{"@timestamp":"2025-01-06T16:12:36.813515+07:00","@version":"1","message":"Nothing to write: null body","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"424c4fe4b5ca84bb920bd8892ca242f1","trace_flags":"01","span_id":"e3e407248c1bf483"}
{"@timestamp":"2025-01-06T16:12:36.814332+07:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"424c4fe4b5ca84bb920bd8892ca242f1","trace_flags":"01","span_id":"e3e407248c1bf483"}
{"@timestamp":"2025-01-06T16:12:36.817105+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:12:36.817375+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:12:36.817777+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:06.828075+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736153912520","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:06.828048+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:06.836671+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:06.836816+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:06.847543+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:06.848678+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:06.849266+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.136421+07:00","@version":"1","message":"Unregistering application AUTHSERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.13752+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736154812137, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.137815+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.138604+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.140278+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.140776+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = DOWN, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@3a627cb1] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.150534+07:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.159417+07:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.160729+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.161309+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.210879+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:32.379178+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:49.61475+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:49.669085+07:00","@version":"1","message":"Starting AuthserviceApplication using Java 23.0.1 with PID 19149 (/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:49.669701+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:49.687339+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:49.687632+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=6fab562e0a9be5a1f9c3513e80ebd6f39c558f2d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:49.687806+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:49.688012+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=6fab562e0a9be5a1f9c3513e80ebd6f39c558f2d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.37016+07:00","@version":"1","message":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.373673+07:00","@version":"1","message":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.453118+07:00","@version":"1","message":"BeanFactory id=5dc84433-bc9d-3672-b28d-8718c562e10a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.495894+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [integrationMbeanExporter] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.500006+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.50067+07:00","@version":"1","message":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.501142+07:00","@version":"1","message":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.502142+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.502497+07:00","@version":"1","message":"Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x000001ff018a5e00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.502911+07:00","@version":"1","message":"Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.503159+07:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.503708+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.504022+07:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000001ff018a6020] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.50439+07:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.509381+07:00","@version":"1","message":"Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.511416+07:00","@version":"1","message":"Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.517426+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.522459+07:00","@version":"1","message":"Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.672462+07:00","@version":"1","message":"Tomcat initialized with port 8101 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.687914+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.690367+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.690651+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.725247+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.725751+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1036 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.854779+07:00","@version":"1","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, otelAutoDispatcherFilter urls=[/*] order=-2147483647, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.855159+07:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:50.877241+07:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.218207+07:00","@version":"1","message":"For 'userservice' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.294031+07:00","@version":"1","message":"7 mappings in 'requestMappingHandlerMapping'","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.316871+07:00","@version":"1","message":"Patterns [/webjars/**, /**, /authservice/swagger-ui*/*swagger-initializer.js, /authservice/swagger-ui*/**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.407285+07:00","@version":"1","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.43926+07:00","@version":"1","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.783568+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.803256+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.810421+07:00","@version":"1","message":"Exposing 21 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.894919+07:00","@version":"1","message":"Registering MessageChannel errorChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.898811+07:00","@version":"1","message":"Registering MessageChannel nullChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.901061+07:00","@version":"1","message":"Registering MessageHandler _org.springframework.integration.errorLogger","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.907102+07:00","@version":"1","message":"Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.907529+07:00","@version":"1","message":"Channel 'authservice.errorChannel' has 1 subscriber(s).","logger_name":"org.springframework.integration.channel.PublishSubscribeChannel","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.907804+07:00","@version":"1","message":"started bean '_org.springframework.integration.errorLogger'","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.94205+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.955451+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.95739+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.962878+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.963017+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.963122+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.963203+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.96328+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.963357+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:51.963432+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.009202+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.041204+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.078921+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.08024+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.089282+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.092117+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.095037+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.095638+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1736154832095 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.097453+07:00","@version":"1","message":"Registering application AUTHSERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.097714+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736154832097, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.09942+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.099583+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.102175+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.103431+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.11041+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = UP, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@54ed35bc] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.136744+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.137348+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.139666+07:00","@version":"1","message":"Tomcat started on port 8101 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.140649+07:00","@version":"1","message":"Updating port to 8101","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:13:52.164789+07:00","@version":"1","message":"Started AuthserviceApplication in 6.036 seconds (process running for 17.185)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:22.109317+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736154832097","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:22.107543+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:22.113483+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:22.120488+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:22.121469+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:22.122213+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:22.128779+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:49.17316+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.174211+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.174506+07:00","@version":"1","message":"Detected StandardServletMultipartResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.174632+07:00","@version":"1","message":"Detected AcceptHeaderLocaleResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.174742+07:00","@version":"1","message":"Detected FixedThemeResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.182091+07:00","@version":"1","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6351eb67","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.182682+07:00","@version":"1","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@2c9415d2","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.183654+07:00","@version":"1","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.184296+07:00","@version":"1","message":"Completed initialization in 9 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.197892+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.203046+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.224458+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@70dc8d18]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:49.251066+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@70dc8d18","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:51.876818+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:14:52.134086+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736154832097","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:52.134078+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:52.134964+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:52.13523+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:52.152719+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:52.153544+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:52.15455+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:14:53.491656+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:15:19.617719+07:00","@version":"1","message":"Attempting to connect to: [localhost:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:15:19.983554+07:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#103388c6:0/SimpleConnection@84ff246 [delegate=amqp://sa@127.0.0.1:5672/, localPort=59278]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:15:21.61337+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:15:21.614338+07:00","@version":"1","message":"Nothing to write: null body","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:15:21.618876+07:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"0d2f2366149622af5cb6e18d18907b2b","trace_flags":"01","span_id":"6b7b3caf3b52b913"}
{"@timestamp":"2025-01-06T16:15:22.159619+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:22.162955+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:22.163002+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736154832097","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:22.16718+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:22.186887+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:22.187436+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:22.187744+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:52.197914+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736154832097","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:52.197914+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:52.222938+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:52.223349+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:52.230214+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:52.230221+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:15:52.231298+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:16:15.968144+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"eac596cbc0d78f8acf20db5a14879461","trace_flags":"01","span_id":"ac32e80c054cb72b"}
{"@timestamp":"2025-01-06T16:16:15.973715+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"eac596cbc0d78f8acf20db5a14879461","trace_flags":"01","span_id":"ac32e80c054cb72b"}
{"@timestamp":"2025-01-06T16:16:15.978266+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@cdc763a]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"eac596cbc0d78f8acf20db5a14879461","trace_flags":"01","span_id":"ac32e80c054cb72b"}
{"@timestamp":"2025-01-06T16:16:15.980026+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@cdc763a","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-3","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"eac596cbc0d78f8acf20db5a14879461","trace_flags":"01","span_id":"ac32e80c054cb72b"}
{"@timestamp":"2025-01-06T16:16:17.875581+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"eac596cbc0d78f8acf20db5a14879461","trace_flags":"01","span_id":"ac32e80c054cb72b"}
{"@timestamp":"2025-01-06T16:16:17.893682+07:00","@version":"1","message":"Using @ExceptionHandler ntcgoer.sharingmodule.exception.advice.GlobalExceptionHandler#handleConflictException(ConflictException)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"eac596cbc0d78f8acf20db5a14879461","trace_flags":"01","span_id":"ac32e80c054cb72b"}
{"@timestamp":"2025-01-06T16:16:17.900402+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"eac596cbc0d78f8acf20db5a14879461","trace_flags":"01","span_id":"ac32e80c054cb72b"}
{"@timestamp":"2025-01-06T16:16:17.901054+07:00","@version":"1","message":"Writing [ntcgoer.sharingmodule.exception.advice.HttpResponse@4e935969]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"eac596cbc0d78f8acf20db5a14879461","trace_flags":"01","span_id":"ac32e80c054cb72b"}
{"@timestamp":"2025-01-06T16:16:17.906076+07:00","@version":"1","message":"Resolved [ntcgoer.sharingmodule.exception.ConflictException: Email taken]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"eac596cbc0d78f8acf20db5a14879461","trace_flags":"01","span_id":"ac32e80c054cb72b"}
{"@timestamp":"2025-01-06T16:16:17.90626+07:00","@version":"1","message":"Completed 409 CONFLICT","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"eac596cbc0d78f8acf20db5a14879461","trace_flags":"01","span_id":"ac32e80c054cb72b"}
{"@timestamp":"2025-01-06T16:16:22.238386+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:16:22.238387+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736154832097","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:16:22.241315+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:16:22.241315+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:16:22.258802+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:16:22.258815+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:16:22.259489+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:16:36.801966+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:16:36.80683+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:16:36.809579+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@4a46789c]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:16:36.811732+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@4a46789c","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-6","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:16:42.552486+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:16:44.479192+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:21:56.773699+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736154832097","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.773846+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.780265+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.797115+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.797051+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.827106+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.826973+07:00","@version":"1","message":"Attempting to connect to: [localhost:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-6","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:21:56.829115+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.8359+07:00","@version":"1","message":"Response 404 NOT_FOUND","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.837009+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - Re-registering apps/AUTHSERVICE","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.837199+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.837415+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.837967+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.838214+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = UP, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@54ed35bc] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.839199+07:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#103388c6:1/SimpleConnection@7a9a8d9c [delegate=amqp://sa@127.0.0.1:5672/, localPort=59413]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-6","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:21:56.843443+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.843888+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.847619+07:00","@version":"1","message":"Using @ExceptionHandler ntcgoer.sharingmodule.exception.advice.GlobalExceptionHandler#handleRuntimeException(RuntimeException)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:21:56.850633+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:21:56.851581+07:00","@version":"1","message":"Writing [ntcgoer.sharingmodule.exception.advice.HttpResponse@3a125056]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:21:56.854972+07:00","@version":"1","message":"Looks like the client has gone away: org.springframework.amqp.AmqpIOException: java.net.SocketException: Broken pipe (For a full stack trace, set the log category 'org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog@15805f3b' to TRACE level.)","logger_name":"org.springframework.web.servlet.handler.DisconnectedClient","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:21:56.855333+07:00","@version":"1","message":"Completed 500 INTERNAL_SERVER_ERROR","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"00fecc11af871cb21fffbb4962a5ad6b","trace_flags":"01","span_id":"247a225a63412728"}
{"@timestamp":"2025-01-06T16:21:56.935868+07:00","@version":"1","message":"Unregistering application AUTHSERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.936468+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736155316936, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.939341+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.940079+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.941747+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.944986+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = DOWN, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@54ed35bc] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.954673+07:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.957169+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.957624+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:21:56.962365+07:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:13.909423+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:13.959195+07:00","@version":"1","message":"Starting AuthserviceApplication using Java 23.0.1 with PID 19473 (/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:13.960039+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:13.981231+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:13.981619+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=6fab562e0a9be5a1f9c3513e80ebd6f39c558f2d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:13.981796+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:13.98191+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=6fab562e0a9be5a1f9c3513e80ebd6f39c558f2d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.634043+07:00","@version":"1","message":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.637608+07:00","@version":"1","message":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.705563+07:00","@version":"1","message":"BeanFactory id=b7234e3a-d188-3dd0-ab2d-3b0db5caca5c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.743818+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [integrationMbeanExporter] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.747865+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.748511+07:00","@version":"1","message":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.749012+07:00","@version":"1","message":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.749992+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.750329+07:00","@version":"1","message":"Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x00007f0001877de0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.750744+07:00","@version":"1","message":"Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.750993+07:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.751575+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.751913+07:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007f0001872230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.752252+07:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.757525+07:00","@version":"1","message":"Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.759384+07:00","@version":"1","message":"Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.765495+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.770437+07:00","@version":"1","message":"Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.905513+07:00","@version":"1","message":"Tomcat initialized with port 8101 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.92102+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.923408+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.923614+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.956939+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:14.957504+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 974 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.043336+07:00","@version":"1","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, otelAutoDispatcherFilter urls=[/*] order=-2147483647, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.043684+07:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.064573+07:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.242739+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.284938+07:00","@version":"1","message":"Starting AuthserviceApplication using Java 23.0.1 with PID 19475 (/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.285573+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.305618+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.305948+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=6fab562e0a9be5a1f9c3513e80ebd6f39c558f2d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.30611+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.306243+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=6fab562e0a9be5a1f9c3513e80ebd6f39c558f2d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.448053+07:00","@version":"1","message":"For 'userservice' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.481889+07:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'emailTemplateQueueName' defined in class path resource [ntcgoer/authservice/configuration/TemplateEmailQueueConfiguration.class]: Failed to instantiate [org.springframework.amqp.core.Queue]: Factory method 'emailTemplateQueueName' threw exception with message: 'name' cannot be null","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.484215+07:00","@version":"1","message":"Exception thrown from ApplicationListener handling ContextClosedEvent","logger_name":"org.springframework.context.annotation.AnnotationConfigApplicationContext","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:275)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)\n\tat org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:267)\n\tat org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:223)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:145)\n\tat org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:454)\n\tat org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:460)\n\tat org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:387)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1163)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:114)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:668)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:625)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1368)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:584)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1361)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:640)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)\n\tat ntcgoer.authservice.AuthserviceApplication.main(AuthserviceApplication.java:16)\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.489083+07:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.505441+07:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:15.5144+07:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'emailTemplateQueueName' defined in class path resource [ntcgoer/authservice/configuration/TemplateEmailQueueConfiguration.class]: Failed to instantiate [org.springframework.amqp.core.Queue]: Factory method 'emailTemplateQueueName' threw exception with message: 'name' cannot be null\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:489)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1357)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)\n\tat ntcgoer.authservice.AuthserviceApplication.main(AuthserviceApplication.java:16)\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.amqp.core.Queue]: Factory method 'emailTemplateQueueName' threw exception with message: 'name' cannot be null\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\n\t... 21 common frames omitted\nCaused by: java.lang.IllegalArgumentException: 'name' cannot be null\n\tat org.springframework.util.Assert.notNull(Assert.java:181)\n\tat org.springframework.amqp.core.Queue.<init>(Queue.java:95)\n\tat org.springframework.amqp.core.Queue.<init>(Queue.java:67)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration.emailTemplateQueueName(TemplateEmailQueueConfiguration.java:24)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration$$SpringCGLIB$$0.CGLIB$emailTemplateQueueName$7(<generated>)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration$$SpringCGLIB$$FastClass$$1.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:348)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration$$SpringCGLIB$$0.emailTemplateQueueName(<generated>)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)\n\t... 24 common frames omitted\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.025051+07:00","@version":"1","message":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.030753+07:00","@version":"1","message":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.105057+07:00","@version":"1","message":"BeanFactory id=b7234e3a-d188-3dd0-ab2d-3b0db5caca5c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.151664+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [integrationMbeanExporter] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.156162+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.156865+07:00","@version":"1","message":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.157381+07:00","@version":"1","message":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.158378+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.158731+07:00","@version":"1","message":"Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x000003f801876518] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.159172+07:00","@version":"1","message":"Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.159451+07:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.159985+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.160338+07:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000003f801876738] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.160761+07:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.166448+07:00","@version":"1","message":"Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.168689+07:00","@version":"1","message":"Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.175537+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.181069+07:00","@version":"1","message":"Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.350585+07:00","@version":"1","message":"Tomcat initialized with port 8101 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.365618+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.368253+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.368479+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.398649+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.399194+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1091 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.488599+07:00","@version":"1","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, otelAutoDispatcherFilter urls=[/*] order=-2147483647, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.488975+07:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.516295+07:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.925397+07:00","@version":"1","message":"For 'userservice' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.964815+07:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'emailTemplateQueueName' defined in class path resource [ntcgoer/authservice/configuration/TemplateEmailQueueConfiguration.class]: Failed to instantiate [org.springframework.amqp.core.Queue]: Factory method 'emailTemplateQueueName' threw exception with message: 'name' cannot be null","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.96786+07:00","@version":"1","message":"Exception thrown from ApplicationListener handling ContextClosedEvent","logger_name":"org.springframework.context.annotation.AnnotationConfigApplicationContext","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:275)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)\n\tat org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:267)\n\tat org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:223)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:145)\n\tat org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:454)\n\tat org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:460)\n\tat org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:387)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1163)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:114)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:668)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:625)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1368)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:584)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1361)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:640)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)\n\tat ntcgoer.authservice.AuthserviceApplication.main(AuthserviceApplication.java:16)\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.97343+07:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:16.990824+07:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:22:17.000351+07:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'emailTemplateQueueName' defined in class path resource [ntcgoer/authservice/configuration/TemplateEmailQueueConfiguration.class]: Failed to instantiate [org.springframework.amqp.core.Queue]: Factory method 'emailTemplateQueueName' threw exception with message: 'name' cannot be null\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:489)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1357)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)\n\tat ntcgoer.authservice.AuthserviceApplication.main(AuthserviceApplication.java:16)\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.amqp.core.Queue]: Factory method 'emailTemplateQueueName' threw exception with message: 'name' cannot be null\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\n\t... 21 common frames omitted\nCaused by: java.lang.IllegalArgumentException: 'name' cannot be null\n\tat org.springframework.util.Assert.notNull(Assert.java:181)\n\tat org.springframework.amqp.core.Queue.<init>(Queue.java:95)\n\tat org.springframework.amqp.core.Queue.<init>(Queue.java:67)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration.emailTemplateQueueName(TemplateEmailQueueConfiguration.java:24)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration$$SpringCGLIB$$0.CGLIB$emailTemplateQueueName$0(<generated>)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration$$SpringCGLIB$$FastClass$$1.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:348)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration$$SpringCGLIB$$0.emailTemplateQueueName(<generated>)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)\n\t... 24 common frames omitted\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:36.963221+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.005298+07:00","@version":"1","message":"Starting AuthserviceApplication using Java 23.0.1 with PID 19591 (/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.006022+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.026823+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.027144+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=6fab562e0a9be5a1f9c3513e80ebd6f39c558f2d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.027318+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.027533+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=6fab562e0a9be5a1f9c3513e80ebd6f39c558f2d, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.731032+07:00","@version":"1","message":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.734805+07:00","@version":"1","message":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.806658+07:00","@version":"1","message":"BeanFactory id=b7234e3a-d188-3dd0-ab2d-3b0db5caca5c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.856119+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [integrationMbeanExporter] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.861241+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.862171+07:00","@version":"1","message":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.862787+07:00","@version":"1","message":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.863931+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.864371+07:00","@version":"1","message":"Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x00003ffe018a73e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.864924+07:00","@version":"1","message":"Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.865238+07:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.865895+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.866326+07:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00003ffe018a7608] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.866732+07:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.873154+07:00","@version":"1","message":"Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.875538+07:00","@version":"1","message":"Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.883318+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:37.888244+07:00","@version":"1","message":"Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:38.030658+07:00","@version":"1","message":"Tomcat initialized with port 8101 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:38.044266+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:38.046361+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:38.04654+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:38.080538+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:38.081121+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1052 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:38.173619+07:00","@version":"1","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, otelAutoDispatcherFilter urls=[/*] order=-2147483647, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:38.173918+07:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:38.19003+07:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:23:38.51953+07:00","@version":"1","message":"For 'userservice' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:29:47.358446+07:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'emailTemplateQueueName' defined in class path resource [ntcgoer/authservice/configuration/TemplateEmailQueueConfiguration.class]: Failed to instantiate [org.springframework.amqp.core.Queue]: Factory method 'emailTemplateQueueName' threw exception with message: 'name' cannot be null","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:29:47.37516+07:00","@version":"1","message":"Exception thrown from ApplicationListener handling ContextClosedEvent","logger_name":"org.springframework.context.annotation.AnnotationConfigApplicationContext","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:275)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)\n\tat org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:267)\n\tat org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:223)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:145)\n\tat org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:454)\n\tat org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:460)\n\tat org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:387)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1163)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:114)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:668)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:625)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1368)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:584)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1361)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:640)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)\n\tat ntcgoer.authservice.AuthserviceApplication.main(AuthserviceApplication.java:16)\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:29:47.389061+07:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:29:47.411721+07:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:29:47.422788+07:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'emailTemplateQueueName' defined in class path resource [ntcgoer/authservice/configuration/TemplateEmailQueueConfiguration.class]: Failed to instantiate [org.springframework.amqp.core.Queue]: Factory method 'emailTemplateQueueName' threw exception with message: 'name' cannot be null\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:489)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1357)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)\n\tat ntcgoer.authservice.AuthserviceApplication.main(AuthserviceApplication.java:16)\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.amqp.core.Queue]: Factory method 'emailTemplateQueueName' threw exception with message: 'name' cannot be null\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\n\t... 21 common frames omitted\nCaused by: java.lang.IllegalArgumentException: 'name' cannot be null\n\tat org.springframework.util.Assert.notNull(Assert.java:181)\n\tat org.springframework.amqp.core.Queue.<init>(Queue.java:95)\n\tat org.springframework.amqp.core.Queue.<init>(Queue.java:67)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration.emailTemplateQueueName(TemplateEmailQueueConfiguration.java:24)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration$$SpringCGLIB$$0.CGLIB$emailTemplateQueueName$0(<generated>)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration$$SpringCGLIB$$FastClass$$1.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:348)\n\tat ntcgoer.authservice.configuration.TemplateEmailQueueConfiguration$$SpringCGLIB$$0.emailTemplateQueueName(<generated>)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)\n\t... 24 common frames omitted\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:04.361948+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:04.422451+07:00","@version":"1","message":"Starting AuthserviceApplication using Java 23.0.1 with PID 20336 (/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:04.423455+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:04.444371+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:04.444671+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=5dac5aebec6117cf32ecb16e1f72fdd626b0e849, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:04.444818+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:04.444928+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=5dac5aebec6117cf32ecb16e1f72fdd626b0e849, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.140278+07:00","@version":"1","message":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.144381+07:00","@version":"1","message":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.221513+07:00","@version":"1","message":"BeanFactory id=b7234e3a-d188-3dd0-ab2d-3b0db5caca5c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.261472+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [integrationMbeanExporter] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.265485+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.266144+07:00","@version":"1","message":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.266645+07:00","@version":"1","message":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.267605+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.267946+07:00","@version":"1","message":"Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x00003c0001877de0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.26838+07:00","@version":"1","message":"Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.268666+07:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.269259+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.269662+07:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00003c0001872230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.270037+07:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.275548+07:00","@version":"1","message":"Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.277456+07:00","@version":"1","message":"Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.283836+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.290562+07:00","@version":"1","message":"Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.432991+07:00","@version":"1","message":"Tomcat initialized with port 8101 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.44459+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.446489+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.446654+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.474873+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.475366+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1030 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.566123+07:00","@version":"1","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, otelAutoDispatcherFilter urls=[/*] order=-2147483647, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.566486+07:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.584209+07:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.732909+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.777952+07:00","@version":"1","message":"Starting AuthserviceApplication using Java 23.0.1 with PID 20340 (/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.778607+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.800326+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.800767+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=5dac5aebec6117cf32ecb16e1f72fdd626b0e849, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.801123+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.801374+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=5dac5aebec6117cf32ecb16e1f72fdd626b0e849, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:05.975838+07:00","@version":"1","message":"For 'userservice' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:06.922298+07:00","@version":"1","message":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:06.929161+07:00","@version":"1","message":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.01242+07:00","@version":"1","message":"BeanFactory id=b7234e3a-d188-3dd0-ab2d-3b0db5caca5c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.059108+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [integrationMbeanExporter] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.065427+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.066345+07:00","@version":"1","message":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.067012+07:00","@version":"1","message":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.068316+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.068781+07:00","@version":"1","message":"Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x000003fe01876518] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.069298+07:00","@version":"1","message":"Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.069592+07:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.070215+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.070567+07:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000003fe01876738] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.07092+07:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.077259+07:00","@version":"1","message":"Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.081573+07:00","@version":"1","message":"Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.102566+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.112299+07:00","@version":"1","message":"Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.273966+07:00","@version":"1","message":"Tomcat initialized with port 8101 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.286046+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.288201+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.288397+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.324928+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.325504+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1522 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.417377+07:00","@version":"1","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, otelAutoDispatcherFilter urls=[/*] order=-2147483647, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.417689+07:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.433763+07:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:07.754325+07:00","@version":"1","message":"For 'userservice' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.263979+07:00","@version":"1","message":"7 mappings in 'requestMappingHandlerMapping'","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.297928+07:00","@version":"1","message":"Patterns [/webjars/**, /**, /authservice/swagger-ui*/*swagger-initializer.js, /authservice/swagger-ui*/**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.3914+07:00","@version":"1","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.418507+07:00","@version":"1","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.741381+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.763116+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.770905+07:00","@version":"1","message":"Exposing 21 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.846941+07:00","@version":"1","message":"Registering MessageChannel errorChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.850363+07:00","@version":"1","message":"Registering MessageChannel nullChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.852238+07:00","@version":"1","message":"Registering MessageHandler _org.springframework.integration.errorLogger","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.857328+07:00","@version":"1","message":"Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.857578+07:00","@version":"1","message":"Channel 'authservice.errorChannel' has 1 subscriber(s).","logger_name":"org.springframework.integration.channel.PublishSubscribeChannel","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.857807+07:00","@version":"1","message":"started bean '_org.springframework.integration.errorLogger'","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.893278+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.908031+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.909943+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.918805+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.918988+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.919086+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.91918+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.919259+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.919337+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.919414+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.968473+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:14.998842+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.023967+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.024842+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.033003+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.03519+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.037569+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.03811+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1736155815038 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.039721+07:00","@version":"1","message":"Registering application AUTHSERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.03998+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736155815039, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.041449+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.041515+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.043557+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.044877+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.050806+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = UP, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@59aca4ad] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.059135+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.059545+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.061251+07:00","@version":"1","message":"Tomcat started on port 8101 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.061838+07:00","@version":"1","message":"Updating port to 8101","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:15.086161+07:00","@version":"1","message":"Started AuthserviceApplication in 15.237 seconds (process running for 26.149)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:22.649784+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.650681+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.650965+07:00","@version":"1","message":"Detected StandardServletMultipartResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.651087+07:00","@version":"1","message":"Detected AcceptHeaderLocaleResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.651194+07:00","@version":"1","message":"Detected FixedThemeResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.653245+07:00","@version":"1","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@42fd26da","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.65378+07:00","@version":"1","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@632f2949","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.654345+07:00","@version":"1","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.654512+07:00","@version":"1","message":"Completed initialization in 4 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.665251+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.669451+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.689974+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@44fa14f3]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:22.717873+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@44fa14f3","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:24.645232+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:24.648944+07:00","@version":"1","message":"Using @ExceptionHandler ntcgoer.sharingmodule.exception.advice.GlobalExceptionHandler#handleConflictException(ConflictException)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:24.654801+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:24.655294+07:00","@version":"1","message":"Writing [ntcgoer.sharingmodule.exception.advice.HttpResponse@34017dd5]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:24.658591+07:00","@version":"1","message":"Resolved [ntcgoer.sharingmodule.exception.ConflictException: Email taken]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:24.658866+07:00","@version":"1","message":"Completed 409 CONFLICT","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f258e70cb120b67a40fe72bbe2cbd0bd","trace_flags":"01","span_id":"978a76d35a67d28e"}
{"@timestamp":"2025-01-06T16:30:43.462589+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:30:43.467467+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:30:43.471886+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@78d33510]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:30:43.477575+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@78d33510","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-3","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:30:45.135434+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:45.134865+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:45.137665+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:45.140276+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:45.154763+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:45.155974+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:45.156495+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:30:45.185003+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:30:46.433536+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:30:52.98523+07:00","@version":"1","message":"Attempting to connect to: [localhost:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-3","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:30:53.041383+07:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#4d0ec988:0/SimpleConnection@5b029382 [delegate=amqp://sa@127.0.0.1:5672/, localPort=59688]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-3","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:30:53.046645+07:00","@version":"1","message":"Auto-declaring a non-durable, auto-delete, or exclusive Queue (send_template_email_queue) durable:false, auto-delete:false, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.","logger_name":"org.springframework.amqp.rabbit.core.RabbitAdmin","thread_name":"http-nio-8101-exec-3","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:30:53.109867+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:30:53.110174+07:00","@version":"1","message":"Nothing to write: null body","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:30:53.110586+07:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d64e46dc45d66e6bdcabaa8fadc55b1d","trace_flags":"01","span_id":"ce5965b296dc1b53"}
{"@timestamp":"2025-01-06T16:31:15.16431+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:15.164318+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:15.173116+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:15.173116+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:15.181438+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:15.181438+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:15.182523+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:45.188796+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:45.188796+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:45.193156+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:45.192368+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:45.200175+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:45.201446+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:31:45.200146+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:15.209291+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:15.20929+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:15.214679+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:15.214679+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:15.221668+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:15.221668+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:15.222522+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:45.229904+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:45.229913+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:45.237909+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:45.237909+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:45.246058+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:45.246092+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:45.247073+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:32:49.456343+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"6a90bba636f1ab4b9a593871c4da6111","trace_flags":"01","span_id":"3de7ff6e1304efaa"}
{"@timestamp":"2025-01-06T16:32:49.458413+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"6a90bba636f1ab4b9a593871c4da6111","trace_flags":"01","span_id":"3de7ff6e1304efaa"}
{"@timestamp":"2025-01-06T16:32:49.460198+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@1c90f8af]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"6a90bba636f1ab4b9a593871c4da6111","trace_flags":"01","span_id":"3de7ff6e1304efaa"}
{"@timestamp":"2025-01-06T16:32:49.461702+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@1c90f8af","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-6","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"6a90bba636f1ab4b9a593871c4da6111","trace_flags":"01","span_id":"3de7ff6e1304efaa"}
{"@timestamp":"2025-01-06T16:32:51.410408+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"6a90bba636f1ab4b9a593871c4da6111","trace_flags":"01","span_id":"3de7ff6e1304efaa"}
{"@timestamp":"2025-01-06T16:32:52.416955+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"6a90bba636f1ab4b9a593871c4da6111","trace_flags":"01","span_id":"3de7ff6e1304efaa"}
{"@timestamp":"2025-01-06T16:32:55.932999+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"6a90bba636f1ab4b9a593871c4da6111","trace_flags":"01","span_id":"3de7ff6e1304efaa"}
{"@timestamp":"2025-01-06T16:32:55.934921+07:00","@version":"1","message":"Nothing to write: null body","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"6a90bba636f1ab4b9a593871c4da6111","trace_flags":"01","span_id":"3de7ff6e1304efaa"}
{"@timestamp":"2025-01-06T16:32:55.935456+07:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-6","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"6a90bba636f1ab4b9a593871c4da6111","trace_flags":"01","span_id":"3de7ff6e1304efaa"}
{"@timestamp":"2025-01-06T16:33:15.253906+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:15.253906+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:15.257695+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:15.257695+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:15.265401+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:15.265401+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:15.266678+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:36.778571+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-7","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c4524f9bf8b07a9f74638eda14645d71","trace_flags":"01","span_id":"87f7e155b76a4982"}
{"@timestamp":"2025-01-06T16:33:36.782231+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-7","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c4524f9bf8b07a9f74638eda14645d71","trace_flags":"01","span_id":"87f7e155b76a4982"}
{"@timestamp":"2025-01-06T16:33:36.784799+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@e94519]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-7","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c4524f9bf8b07a9f74638eda14645d71","trace_flags":"01","span_id":"87f7e155b76a4982"}
{"@timestamp":"2025-01-06T16:33:36.786727+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@e94519","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-7","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"c4524f9bf8b07a9f74638eda14645d71","trace_flags":"01","span_id":"87f7e155b76a4982"}
{"@timestamp":"2025-01-06T16:33:38.59999+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-7","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c4524f9bf8b07a9f74638eda14645d71","trace_flags":"01","span_id":"87f7e155b76a4982"}
{"@timestamp":"2025-01-06T16:33:38.60191+07:00","@version":"1","message":"Using @ExceptionHandler ntcgoer.sharingmodule.exception.advice.GlobalExceptionHandler#handleConflictException(ConflictException)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-7","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c4524f9bf8b07a9f74638eda14645d71","trace_flags":"01","span_id":"87f7e155b76a4982"}
{"@timestamp":"2025-01-06T16:33:38.602531+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-7","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c4524f9bf8b07a9f74638eda14645d71","trace_flags":"01","span_id":"87f7e155b76a4982"}
{"@timestamp":"2025-01-06T16:33:38.602745+07:00","@version":"1","message":"Writing [ntcgoer.sharingmodule.exception.advice.HttpResponse@7df79128]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-7","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c4524f9bf8b07a9f74638eda14645d71","trace_flags":"01","span_id":"87f7e155b76a4982"}
{"@timestamp":"2025-01-06T16:33:38.603396+07:00","@version":"1","message":"Resolved [ntcgoer.sharingmodule.exception.ConflictException: Email taken]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-7","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c4524f9bf8b07a9f74638eda14645d71","trace_flags":"01","span_id":"87f7e155b76a4982"}
{"@timestamp":"2025-01-06T16:33:38.603595+07:00","@version":"1","message":"Completed 409 CONFLICT","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-7","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c4524f9bf8b07a9f74638eda14645d71","trace_flags":"01","span_id":"87f7e155b76a4982"}
{"@timestamp":"2025-01-06T16:33:45.270025+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:45.271402+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:45.272414+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:45.272414+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:45.280002+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:45.282007+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:33:45.283349+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:15.294663+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:15.294663+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:15.302163+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:15.302154+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:15.343806+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:15.343806+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:15.344602+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:45.349863+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:45.349863+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:45.354059+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:45.354328+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:45.363962+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:45.363962+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:34:45.3653+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:35:02.228296+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f005042065e67d68b7bb7ee72015ae9d","trace_flags":"01","span_id":"6c5be4bf64ca1bc2"}
{"@timestamp":"2025-01-06T16:35:02.231109+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f005042065e67d68b7bb7ee72015ae9d","trace_flags":"01","span_id":"6c5be4bf64ca1bc2"}
{"@timestamp":"2025-01-06T16:35:02.232982+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@34de0aa5]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f005042065e67d68b7bb7ee72015ae9d","trace_flags":"01","span_id":"6c5be4bf64ca1bc2"}
{"@timestamp":"2025-01-06T16:35:02.234595+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@34de0aa5","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-10","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"f005042065e67d68b7bb7ee72015ae9d","trace_flags":"01","span_id":"6c5be4bf64ca1bc2"}
{"@timestamp":"2025-01-06T16:35:04.667589+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f005042065e67d68b7bb7ee72015ae9d","trace_flags":"01","span_id":"6c5be4bf64ca1bc2"}
{"@timestamp":"2025-01-06T16:35:06.836573+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f005042065e67d68b7bb7ee72015ae9d","trace_flags":"01","span_id":"6c5be4bf64ca1bc2"}
{"@timestamp":"2025-01-06T16:35:15.48973+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:35:15.490518+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:35:15.490652+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:35:23.376367+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:35:23.376338+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:36:07.173178+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:36:07.173006+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:36:09.655949+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:36:07.175134+07:00","@version":"1","message":"task supervisor timed out","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"DiscoveryClient-%d","level":"WARN","level_value":30000,"stack_trace":"java.util.concurrent.TimeoutException: null\n\tat java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204)\n\tat com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:65)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:36:07.175074+07:00","@version":"1","message":"task supervisor timed out","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"DiscoveryClient-%d","level":"WARN","level_value":30000,"stack_trace":"java.util.concurrent.TimeoutException: null\n\tat java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204)\n\tat com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:65)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\n","serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:13.273187+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:13.272928+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:13.279259+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:13.279734+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:13.27923+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f005042065e67d68b7bb7ee72015ae9d","trace_flags":"01","span_id":"6c5be4bf64ca1bc2"}
{"@timestamp":"2025-01-06T16:37:13.280161+07:00","@version":"1","message":"Nothing to write: null body","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f005042065e67d68b7bb7ee72015ae9d","trace_flags":"01","span_id":"6c5be4bf64ca1bc2"}
{"@timestamp":"2025-01-06T16:37:13.285484+07:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-10","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"f005042065e67d68b7bb7ee72015ae9d","trace_flags":"01","span_id":"6c5be4bf64ca1bc2"}
{"@timestamp":"2025-01-06T16:37:13.300844+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:13.308869+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:13.309208+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:43.309591+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:43.313173+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:43.313665+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:43.314135+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:43.321495+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:43.321495+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:37:43.322416+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:13.332521+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:13.332517+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:13.339861+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:13.339861+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:13.349125+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:13.349125+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:13.350294+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:43.360139+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:43.36014+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:43.368022+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:43.368022+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:43.376635+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:43.376635+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:38:43.377823+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:13.386372+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:13.386373+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:13.392078+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:13.392078+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:13.398845+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:13.398669+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:13.399617+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:43.406135+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736155815039","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:43.406129+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:43.408404+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:43.408404+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:43.415082+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:43.415445+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:39:43.415994+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.682314+07:00","@version":"1","message":"7 mappings in 'requestMappingHandlerMapping'","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.71097+07:00","@version":"1","message":"Patterns [/webjars/**, /**, /authservice/swagger-ui*/*swagger-initializer.js, /authservice/swagger-ui*/**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.797628+07:00","@version":"1","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.834376+07:00","@version":"1","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.843982+07:00","@version":"1","message":"Unregistering application AUTHSERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.845282+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736156412845, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.847483+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.849041+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.850235+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.850531+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = DOWN, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@59aca4ad] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.871329+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:12.872535+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:27.656496+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:27.710767+07:00","@version":"1","message":"Starting AuthserviceApplication using Java 23.0.1 with PID 20713 (/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:27.712045+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:27.73175+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:27.73207+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=5dac5aebec6117cf32ecb16e1f72fdd626b0e849, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:27.732252+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:27.732363+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=5dac5aebec6117cf32ecb16e1f72fdd626b0e849, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.562605+07:00","@version":"1","message":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.566323+07:00","@version":"1","message":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.631212+07:00","@version":"1","message":"BeanFactory id=b7234e3a-d188-3dd0-ab2d-3b0db5caca5c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.672332+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [integrationMbeanExporter] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.677687+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.678842+07:00","@version":"1","message":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.679452+07:00","@version":"1","message":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.680965+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.68146+07:00","@version":"1","message":"Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x00000400018a7720] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.681925+07:00","@version":"1","message":"Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.682189+07:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.682777+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.683114+07:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000400018a7940] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.683471+07:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.690036+07:00","@version":"1","message":"Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.692343+07:00","@version":"1","message":"Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.699317+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.704891+07:00","@version":"1","message":"Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.84162+07:00","@version":"1","message":"Tomcat initialized with port 8101 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.852449+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.854255+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.854403+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.882358+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.882969+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1149 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.985711+07:00","@version":"1","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, otelAutoDispatcherFilter urls=[/*] order=-2147483647, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:28.986046+07:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:29.009373+07:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:29.492695+07:00","@version":"1","message":"For 'userservice' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:29.606967+07:00","@version":"1","message":"7 mappings in 'requestMappingHandlerMapping'","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:29.638147+07:00","@version":"1","message":"Patterns [/webjars/**, /**, /authservice/swagger-ui*/*swagger-initializer.js, /authservice/swagger-ui*/**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:29.739716+07:00","@version":"1","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:29.767727+07:00","@version":"1","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.27356+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.293524+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.301008+07:00","@version":"1","message":"Exposing 21 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.3885+07:00","@version":"1","message":"Registering MessageChannel errorChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.39233+07:00","@version":"1","message":"Registering MessageChannel nullChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.394522+07:00","@version":"1","message":"Registering MessageHandler _org.springframework.integration.errorLogger","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.400591+07:00","@version":"1","message":"Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.400916+07:00","@version":"1","message":"Channel 'authservice.errorChannel' has 1 subscriber(s).","logger_name":"org.springframework.integration.channel.PublishSubscribeChannel","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.401127+07:00","@version":"1","message":"started bean '_org.springframework.integration.errorLogger'","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.443131+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.457092+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.459163+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.464778+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.46493+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.465026+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.465134+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.465258+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.465356+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.465442+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.511715+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.543749+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.574717+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.575761+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.585312+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.587951+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.590725+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.591348+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1736156430591 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.59311+07:00","@version":"1","message":"Registering application AUTHSERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.593294+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736156430593, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.595413+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.595525+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.598009+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.599178+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.605914+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = UP, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@4ea91a7a] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.616003+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.616518+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.619461+07:00","@version":"1","message":"Tomcat started on port 8101 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.620182+07:00","@version":"1","message":"Updating port to 8101","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:40:30.644619+07:00","@version":"1","message":"Started AuthserviceApplication in 6.708 seconds (process running for 17.241)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:00.599206+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:00.600626+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:00.612593+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:00.621306+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:00.622088+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:00.624203+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:00.63056+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:30.633835+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:30.633618+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:30.636465+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:30.637275+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:30.643174+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:30.643107+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:41:30.643933+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:00.657302+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:00.657302+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:00.665209+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:00.665222+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:00.671082+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:00.671888+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:00.674538+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:30.681125+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:30.681421+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:30.684578+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:30.685334+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:30.691576+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:30.691685+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:42:30.692276+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:00.699931+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:00.69993+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:00.707037+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:00.707037+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:00.713583+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:00.713583+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:00.714516+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:30.716401+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:30.716401+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:30.719219+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:30.719199+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:30.722342+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:30.722355+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:43:30.722641+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:00.72334+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:00.72335+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:00.725125+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:00.725125+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:00.72934+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:00.729326+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:00.729888+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:30.732899+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:30.732901+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:30.735847+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:30.735847+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:30.740143+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:30.74019+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:44:30.740785+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:00.746663+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:00.746663+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:00.750015+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:00.750015+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:00.755106+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:00.755193+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:00.755598+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:30.457459+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:30.761864+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:30.761864+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:30.765577+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:30.765577+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:30.772172+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:30.772172+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:45:30.772958+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:00.779184+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:00.779184+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:00.793201+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:00.793293+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:00.798657+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:00.798617+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:00.799463+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:15.141676+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.142585+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.142858+07:00","@version":"1","message":"Detected StandardServletMultipartResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.142984+07:00","@version":"1","message":"Detected AcceptHeaderLocaleResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.143068+07:00","@version":"1","message":"Detected FixedThemeResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.145156+07:00","@version":"1","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4e59b9c9","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.145485+07:00","@version":"1","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@695f59ee","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.145762+07:00","@version":"1","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.145853+07:00","@version":"1","message":"Completed initialization in 3 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.154969+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.159761+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.179134+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@3244997c]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:15.203359+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@3244997c","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:17.74046+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:19.611262+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.184802+07:00","@version":"1","message":"Attempting to connect to: [localhost:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.356247+07:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#1decf3e3:0/SimpleConnection@220bade7 [delegate=amqp://sa@127.0.0.1:5672/, localPort=60026]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.362033+07:00","@version":"1","message":"Initializing declarations","logger_name":"org.springframework.amqp.rabbit.core.RabbitAdmin","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.379265+07:00","@version":"1","message":"Auto-declaring a non-durable, auto-delete, or exclusive Queue (send_template_email_queue) durable:false, auto-delete:false, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.","logger_name":"org.springframework.amqp.rabbit.core.RabbitAdmin","thread_name":"http-nio-8101-exec-1","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.422631+07:00","@version":"1","message":"Creating cached Rabbit Channel from AMQChannel(amqp://sa@127.0.0.1:5672/,1)","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.447977+07:00","@version":"1","message":"Executing callback RabbitAdmin$$Lambda/0x0000040001ced3e0 on RabbitMQ Channel: Cached Rabbit Channel: AMQChannel(amqp://sa@127.0.0.1:5672/,1), conn: Proxy@77f56b69 Shared Rabbit Connection: SimpleConnection@220bade7 [delegate=amqp://sa@127.0.0.1:5672/, localPort=60026]","logger_name":"org.springframework.amqp.rabbit.core.RabbitTemplate","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.448447+07:00","@version":"1","message":"declaring Exchange 'email_exchange'","logger_name":"org.springframework.amqp.rabbit.core.RabbitAdmin","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.457899+07:00","@version":"1","message":"declaring Queue 'send_template_email_queue'","logger_name":"org.springframework.amqp.rabbit.core.RabbitAdmin","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.460752+07:00","@version":"1","message":"Binding destination [send_template_email_queue (QUEUE)] to exchange [email_exchange] with routing key [send_template_email_key]","logger_name":"org.springframework.amqp.rabbit.core.RabbitAdmin","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.464199+07:00","@version":"1","message":"Declarations finished","logger_name":"org.springframework.amqp.rabbit.core.RabbitAdmin","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.46445+07:00","@version":"1","message":"Executing callback RabbitTemplate$$Lambda/0x0000040001cc7328 on RabbitMQ Channel: Cached Rabbit Channel: AMQChannel(amqp://sa@127.0.0.1:5672/,1), conn: Proxy@77f56b69 Shared Rabbit Connection: SimpleConnection@220bade7 [delegate=amqp://sa@127.0.0.1:5672/, localPort=60026]","logger_name":"org.springframework.amqp.rabbit.core.RabbitTemplate","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.466018+07:00","@version":"1","message":"Publishing message [(Body:'[B@7dd024e5(byte[281])' MessageProperties [headers={}, contentType=text/plain, contentEncoding=UTF-8, contentLength=281, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])] on exchange [email_exchange], routingKey = [send_template_email_key]","logger_name":"org.springframework.amqp.rabbit.core.RabbitTemplate","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.476884+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.477261+07:00","@version":"1","message":"Nothing to write: null body","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:26.477853+07:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-1","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c0dc5f6fb2cba35dc2613b915f704a05","trace_flags":"01","span_id":"5ebd6a7ffadcd83a"}
{"@timestamp":"2025-01-06T16:46:30.804386+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:30.804386+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:30.806905+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:30.806905+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:30.810181+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:30.81018+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:46:30.810546+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:00.818653+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:00.818653+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:00.842691+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:00.842691+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:00.849447+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:00.849443+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:00.850291+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:30.855768+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:30.855768+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:30.860321+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:30.860321+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:30.865611+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:30.865612+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:47:30.866444+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:00.871348+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:00.871348+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:00.87662+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:00.87662+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:00.882981+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:00.882981+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:00.883832+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:30.891279+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:30.891279+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:30.893504+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:30.893504+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:30.89909+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:30.89909+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:48:30.899771+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:00.906939+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:00.906938+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:00.911042+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:00.911042+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:00.920199+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:00.920203+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:00.921492+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:30.92842+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:30.92842+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:30.930867+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:30.930867+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:30.93601+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:30.93601+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:49:30.936942+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:00.964017+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:00.964026+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:00.976354+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:00.976354+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:00.980253+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:00.980253+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:00.980746+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:30.46221+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:30.986673+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:30.986674+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:30.988726+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:30.989343+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:30.994719+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:30.994755+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:50:30.996255+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:00.998697+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:00.998697+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:01.004124+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:01.004124+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:01.009121+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:01.009121+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:01.009923+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:31.01627+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:31.01627+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:31.018889+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:31.0191+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:31.024903+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:31.024903+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:51:31.026014+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:01.033494+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:01.047981+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:01.051587+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:01.052465+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:01.052867+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:01.056568+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:01.059199+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:31.06194+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:31.060801+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:31.063892+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:31.063892+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:31.069933+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:31.069933+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:52:31.070895+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:01.078058+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:01.078058+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:01.081764+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:01.081774+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:01.088229+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:01.088762+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:01.089589+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:31.096214+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:31.096214+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:31.101912+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:31.101912+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:31.108301+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:31.108301+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:53:31.10918+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:01.116796+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:01.116796+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:01.121299+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:01.121295+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:01.126313+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:01.126313+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:01.126857+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:31.132595+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:31.132594+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:31.134473+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:31.135368+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:31.140406+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:31.140406+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:54:31.141103+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:01.144096+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:01.144096+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:01.14667+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:01.14667+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:01.152222+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:01.152222+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:01.153044+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:30.467288+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:31.159456+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:31.159456+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:31.160693+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:31.160699+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:31.165244+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:31.165251+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:55:31.165737+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:01.171419+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:01.171419+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:01.173354+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:01.173389+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:01.179298+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:01.179291+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:01.180069+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:31.183452+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:31.183452+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:31.190538+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:31.190531+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:31.195602+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:31.195596+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:56:31.196264+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:01.202309+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:01.202309+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:01.205392+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:01.205395+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:01.218285+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:01.218514+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:01.218864+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:31.225016+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:31.225016+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:31.227611+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:31.227611+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:31.233617+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:31.233617+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:57:31.234462+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:01.240564+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:01.240588+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:01.242599+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:01.242599+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:01.247773+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:01.247774+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:01.248377+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:31.250286+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:31.250161+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:31.252614+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:31.252888+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:31.257642+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:31.257628+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:58:31.258248+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:01.261421+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:01.261421+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:01.266084+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:01.266084+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:01.271751+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:01.271752+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:01.272434+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:31.278376+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:31.278354+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:31.280323+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:31.280322+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:31.285952+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:31.285952+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T16:59:31.286502+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:01.291097+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:01.290978+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:01.297471+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:01.297472+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:01.309059+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:01.309059+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:01.309939+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:30.472516+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:31.316558+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:31.316558+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:31.319127+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:31.319132+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:31.325444+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:31.325444+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:00:31.333102+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:01.358118+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:01.358522+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:01.363286+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:01.363286+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:01.367489+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:01.367489+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:01.367921+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:31.404173+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:31.404174+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:31.414275+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:31.414274+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:31.423133+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:31.423159+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:01:31.424175+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:01.4362+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:01.4362+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:01.440602+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:01.440597+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:01.456007+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:01.456008+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:01.457993+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:31.469344+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:31.469344+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:31.488747+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:31.488747+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:31.506525+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:31.506525+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:02:31.507226+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:18.974854+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:18.974854+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:18.979487+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:18.979482+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:18.985588+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:18.985588+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:18.986228+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:48.995701+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:48.997147+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:49.003579+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:49.017322+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:49.046007+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:49.048674+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:03:49.048857+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:15.297369+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:15.301186+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:15.304618+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:15.337166+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:15.337562+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:15.339676+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:15.340054+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:45.316989+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:45.319257+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:45.324067+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:45.342645+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:45.343013+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:45.345925+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:06:45.346202+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:15.348696+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:15.351526+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:15.353552+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:15.353553+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:15.357792+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:15.35779+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:15.358238+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:44.242462+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:45.364048+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:45.364048+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:45.365252+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:45.365252+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:45.369899+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:45.369899+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:07:45.370403+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:15.373347+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:15.373347+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:15.376403+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:15.376417+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:15.382611+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:15.382611+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:15.383196+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:45.385426+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:45.385426+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:45.388614+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:45.388614+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:45.39413+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:45.39413+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:08:45.394716+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:15.422939+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:15.422939+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:15.433339+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:15.433339+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:15.438796+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:15.438797+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:15.439209+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:45.445295+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:45.445295+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:45.447987+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:45.447988+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:45.45394+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:45.453941+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:09:45.454666+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:15.460605+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:15.460605+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:15.47424+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:15.47424+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:15.483869+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:15.483869+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:15.484579+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:45.49111+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:45.49111+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:45.494652+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:45.494652+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:45.501045+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:45.501045+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:10:45.501653+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:11:15.50355+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:11:15.50355+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:11:15.505512+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:11:15.505512+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:11:15.560794+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:11:15.560793+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:11:15.561116+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:11:24.209809+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"dd20df30ab1d0a94b3bd50a2c0f3200f","trace_flags":"01","span_id":"1f155dfba4d9e884"}
{"@timestamp":"2025-01-06T17:11:24.212804+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"dd20df30ab1d0a94b3bd50a2c0f3200f","trace_flags":"01","span_id":"1f155dfba4d9e884"}
{"@timestamp":"2025-01-06T17:11:24.215343+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@255407fa]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"dd20df30ab1d0a94b3bd50a2c0f3200f","trace_flags":"01","span_id":"1f155dfba4d9e884"}
{"@timestamp":"2025-01-06T17:11:24.216281+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@255407fa","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-5","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"dd20df30ab1d0a94b3bd50a2c0f3200f","trace_flags":"01","span_id":"1f155dfba4d9e884"}
{"@timestamp":"2025-01-06T17:11:27.392775+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"dd20df30ab1d0a94b3bd50a2c0f3200f","trace_flags":"01","span_id":"1f155dfba4d9e884"}
{"@timestamp":"2025-01-06T17:11:28.985333+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"dd20df30ab1d0a94b3bd50a2c0f3200f","trace_flags":"01","span_id":"1f155dfba4d9e884"}
{"@timestamp":"2025-01-06T17:12:01.26757+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:01.26757+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:01.281006+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:01.281006+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:03.920967+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:03.921519+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:03.922749+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:09.303458+07:00","@version":"1","message":"Executing callback RabbitTemplate$$Lambda/0x0000040001cc7328 on RabbitMQ Channel: Cached Rabbit Channel: AMQChannel(amqp://sa@127.0.0.1:5672/,1), conn: Proxy@77f56b69 Shared Rabbit Connection: SimpleConnection@220bade7 [delegate=amqp://sa@127.0.0.1:5672/, localPort=60026]","logger_name":"org.springframework.amqp.rabbit.core.RabbitTemplate","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"dd20df30ab1d0a94b3bd50a2c0f3200f","trace_flags":"01","span_id":"1f155dfba4d9e884"}
{"@timestamp":"2025-01-06T17:12:09.30868+07:00","@version":"1","message":"Publishing message [(Body:'[B@8aad0ff(byte[281])' MessageProperties [headers={}, contentType=text/plain, contentEncoding=UTF-8, contentLength=281, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])] on exchange [email_exchange], routingKey = [send_template_email_key]","logger_name":"org.springframework.amqp.rabbit.core.RabbitTemplate","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"dd20df30ab1d0a94b3bd50a2c0f3200f","trace_flags":"01","span_id":"1f155dfba4d9e884"}
{"@timestamp":"2025-01-06T17:12:09.336493+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"dd20df30ab1d0a94b3bd50a2c0f3200f","trace_flags":"01","span_id":"1f155dfba4d9e884"}
{"@timestamp":"2025-01-06T17:12:09.336822+07:00","@version":"1","message":"Nothing to write: null body","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"dd20df30ab1d0a94b3bd50a2c0f3200f","trace_flags":"01","span_id":"1f155dfba4d9e884"}
{"@timestamp":"2025-01-06T17:12:09.337085+07:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"dd20df30ab1d0a94b3bd50a2c0f3200f","trace_flags":"01","span_id":"1f155dfba4d9e884"}
{"@timestamp":"2025-01-06T17:12:33.935964+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:33.938914+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:33.945416+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:39.307919+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:39.309945+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:39.314569+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:39.315087+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:12:44.246977+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:03.951517+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:03.954228+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:03.959597+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:09.323269+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:09.324392+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:09.329454+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:09.330187+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:33.97902+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:33.987334+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:33.99173+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:39.338344+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:39.340058+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:39.344677+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:13:39.345281+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:03.99777+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:04.005251+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:04.015164+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:09.350937+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:09.363137+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:09.370185+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:09.370762+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:34.024112+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:34.031401+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:34.038456+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:39.375944+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:39.377462+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:39.382838+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:14:39.383685+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:03.801861+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c581a5ceaf36412d7ad096ed49fd0393","trace_flags":"01","span_id":"7c3f786ddd0708e8"}
{"@timestamp":"2025-01-06T17:15:03.805229+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c581a5ceaf36412d7ad096ed49fd0393","trace_flags":"01","span_id":"7c3f786ddd0708e8"}
{"@timestamp":"2025-01-06T17:15:03.807381+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@a836f5]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c581a5ceaf36412d7ad096ed49fd0393","trace_flags":"01","span_id":"7c3f786ddd0708e8"}
{"@timestamp":"2025-01-06T17:15:03.808669+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@a836f5","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-8","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"c581a5ceaf36412d7ad096ed49fd0393","trace_flags":"01","span_id":"7c3f786ddd0708e8"}
{"@timestamp":"2025-01-06T17:15:06.091247+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:06.092127+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:06.098631+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:06.125892+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c581a5ceaf36412d7ad096ed49fd0393","trace_flags":"01","span_id":"7c3f786ddd0708e8"}
{"@timestamp":"2025-01-06T17:15:07.498281+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c581a5ceaf36412d7ad096ed49fd0393","trace_flags":"01","span_id":"7c3f786ddd0708e8"}
{"@timestamp":"2025-01-06T17:15:09.735604+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:09.737649+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:11.038482+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:11.039221+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:13.341634+07:00","@version":"1","message":"Executing callback RabbitTemplate$$Lambda/0x0000040001cc7328 on RabbitMQ Channel: Cached Rabbit Channel: AMQChannel(amqp://sa@127.0.0.1:5672/,1), conn: Proxy@77f56b69 Shared Rabbit Connection: SimpleConnection@220bade7 [delegate=amqp://sa@127.0.0.1:5672/, localPort=60026]","logger_name":"org.springframework.amqp.rabbit.core.RabbitTemplate","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c581a5ceaf36412d7ad096ed49fd0393","trace_flags":"01","span_id":"7c3f786ddd0708e8"}
{"@timestamp":"2025-01-06T17:15:13.342697+07:00","@version":"1","message":"Publishing message [(Body:'[B@6d67e47d(byte[281])' MessageProperties [headers={}, contentType=text/plain, contentEncoding=UTF-8, contentLength=281, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])] on exchange [email_exchange], routingKey = [send_template_email_key]","logger_name":"org.springframework.amqp.rabbit.core.RabbitTemplate","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c581a5ceaf36412d7ad096ed49fd0393","trace_flags":"01","span_id":"7c3f786ddd0708e8"}
{"@timestamp":"2025-01-06T17:15:13.346578+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c581a5ceaf36412d7ad096ed49fd0393","trace_flags":"01","span_id":"7c3f786ddd0708e8"}
{"@timestamp":"2025-01-06T17:15:13.347424+07:00","@version":"1","message":"Nothing to write: null body","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c581a5ceaf36412d7ad096ed49fd0393","trace_flags":"01","span_id":"7c3f786ddd0708e8"}
{"@timestamp":"2025-01-06T17:15:13.348151+07:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-8","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"c581a5ceaf36412d7ad096ed49fd0393","trace_flags":"01","span_id":"7c3f786ddd0708e8"}
{"@timestamp":"2025-01-06T17:15:36.102137+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:36.104775+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:36.110762+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:43.347547+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:43.349594+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:43.356628+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:15:43.357294+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:06.115159+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:06.117406+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:06.123834+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:13.364997+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:13.366868+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:13.373138+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:13.374162+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:36.128682+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:36.131183+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:36.138408+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:43.380484+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:43.381948+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:43.387856+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:16:43.389308+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:06.146772+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:06.151942+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:06.160952+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:13.394591+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:13.395996+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:13.405931+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:13.407037+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:36.169255+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:36.172578+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:36.179542+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:43.413841+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:43.415112+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:43.419544+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:43.419963+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:17:44.250117+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:06.186653+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:06.192193+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:06.211136+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:13.427695+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:13.429859+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:13.436233+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:13.43718+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:36.215348+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736156430593","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:36.220171+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:36.227345+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.743902+07:00","@version":"1","message":"Unregistering application AUTHSERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.744721+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736158717744, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.744887+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.745076+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.745674+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.747583+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = DOWN, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@4ea91a7a] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.755183+07:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.755463+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.755625+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.758035+07:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.766149+07:00","@version":"1","message":"Closing cached Channel: AMQChannel(amqp://sa@127.0.0.1:5672/,1)","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.810626+07:00","@version":"1","message":"Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.810862+07:00","@version":"1","message":"Channel 'authservice.errorChannel' has 0 subscriber(s).","logger_name":"org.springframework.integration.channel.PublishSubscribeChannel","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.811053+07:00","@version":"1","message":"stopped bean '_org.springframework.integration.errorLogger'","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:37.830491+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:55.359474+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:55.414842+07:00","@version":"1","message":"Starting AuthserviceApplication using Java 23.0.1 with PID 21834 (/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:55.415579+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:55.435955+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:55.436251+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=5dac5aebec6117cf32ecb16e1f72fdd626b0e849, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:55.436434+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:55.436667+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=5dac5aebec6117cf32ecb16e1f72fdd626b0e849, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.147842+07:00","@version":"1","message":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.151579+07:00","@version":"1","message":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.215932+07:00","@version":"1","message":"BeanFactory id=566caf49-8aa5-3854-9822-a8f9e3a12561","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.25715+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [integrationMbeanExporter] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.261508+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.262267+07:00","@version":"1","message":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.262877+07:00","@version":"1","message":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.263945+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.264359+07:00","@version":"1","message":"Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x0000000301875948] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.264848+07:00","@version":"1","message":"Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.26515+07:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.265739+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.266091+07:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x0000000301875b68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.266474+07:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.271804+07:00","@version":"1","message":"Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.273712+07:00","@version":"1","message":"Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.27985+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.284644+07:00","@version":"1","message":"Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.429172+07:00","@version":"1","message":"Tomcat initialized with port 8101 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.440622+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.442415+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.442563+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.47096+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.471413+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1034 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.557884+07:00","@version":"1","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, otelAutoDispatcherFilter urls=[/*] order=-2147483647, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.558174+07:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.576671+07:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.721397+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.765515+07:00","@version":"1","message":"Starting AuthserviceApplication using Java 23.0.1 with PID 21838 (/Users/ligyn-004/Documents/Personal/nevpre/backend/auth-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.766238+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.784061+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.784371+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[default], label=null, version=5dac5aebec6117cf32ecb16e1f72fdd626b0e849, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.78453+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.784642+07:00","@version":"1","message":"Located environment: name=authservice, profiles=[local], label=null, version=5dac5aebec6117cf32ecb16e1f72fdd626b0e849, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:56.961249+07:00","@version":"1","message":"For 'userservice' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.062773+07:00","@version":"1","message":"7 mappings in 'requestMappingHandlerMapping'","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.096045+07:00","@version":"1","message":"Patterns [/webjars/**, /**, /authservice/swagger-ui*/*swagger-initializer.js, /authservice/swagger-ui*/**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.189003+07:00","@version":"1","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.215081+07:00","@version":"1","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.54415+07:00","@version":"1","message":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.54804+07:00","@version":"1","message":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.570315+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.594566+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.605591+07:00","@version":"1","message":"Exposing 21 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.623324+07:00","@version":"1","message":"BeanFactory id=566caf49-8aa5-3854-9822-a8f9e3a12561","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.676064+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [integrationMbeanExporter] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.681057+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.68181+07:00","@version":"1","message":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.682346+07:00","@version":"1","message":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.683445+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.683796+07:00","@version":"1","message":"Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x0000180001875948] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.684211+07:00","@version":"1","message":"Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.68448+07:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.685044+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.685354+07:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x0000180001875b68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.685694+07:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.691365+07:00","@version":"1","message":"Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.693532+07:00","@version":"1","message":"Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.700739+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.703741+07:00","@version":"1","message":"Registering MessageChannel errorChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.707321+07:00","@version":"1","message":"Registering MessageChannel nullChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.709432+07:00","@version":"1","message":"Registering MessageHandler _org.springframework.integration.errorLogger","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.711092+07:00","@version":"1","message":"Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.715211+07:00","@version":"1","message":"Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.715501+07:00","@version":"1","message":"Channel 'authservice.errorChannel' has 1 subscriber(s).","logger_name":"org.springframework.integration.channel.PublishSubscribeChannel","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.715702+07:00","@version":"1","message":"started bean '_org.springframework.integration.errorLogger'","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.753749+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.768483+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.770643+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.783472+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.783778+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.783892+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.783975+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.784053+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.784147+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.784225+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.843191+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.873954+07:00","@version":"1","message":"Tomcat initialized with port 8101 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.879336+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.888795+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.891334+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.891525+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.908027+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.90909+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.91947+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.922378+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.922903+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.923522+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1138 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.925843+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.927212+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1736158737926 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.929367+07:00","@version":"1","message":"Registering application AUTHSERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.929583+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736158737929, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.931933+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.932538+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.934249+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.935463+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.943537+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = UP, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7c1acacd] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.956113+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.956591+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.960651+07:00","@version":"1","message":"Tomcat started on port 8101 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.961276+07:00","@version":"1","message":"Updating port to 8101","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:57.988953+07:00","@version":"1","message":"Started AuthserviceApplication in 7.486 seconds (process running for 18.802)","logger_name":"ntcgoer.authservice.AuthserviceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:58.029479+07:00","@version":"1","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, otelAutoDispatcherFilter urls=[/*] order=-2147483647, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:58.030186+07:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:58.052525+07:00","@version":"1","message":"Filter 'webMvcObservationFilter' configured for use","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:58.105545+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8101-exec-2","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.106041+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.106292+07:00","@version":"1","message":"Detected StandardServletMultipartResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.106428+07:00","@version":"1","message":"Detected AcceptHeaderLocaleResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.106529+07:00","@version":"1","message":"Detected FixedThemeResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.108179+07:00","@version":"1","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@13f3d8c","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.108556+07:00","@version":"1","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@48834af1","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.108875+07:00","@version":"1","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.109003+07:00","@version":"1","message":"Completed initialization in 2 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.117488+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.121341+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.139979+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@7cf197c7]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.168391+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@7cf197c7","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-2","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:18:58.551096+07:00","@version":"1","message":"For 'userservice' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:58.731468+07:00","@version":"1","message":"7 mappings in 'requestMappingHandlerMapping'","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:58.763143+07:00","@version":"1","message":"Patterns [/webjars/**, /**, /authservice/swagger-ui*/*swagger-initializer.js, /authservice/swagger-ui*/**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:58.867703+07:00","@version":"1","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:58.895463+07:00","@version":"1","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.462993+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.500111+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.513696+07:00","@version":"1","message":"Exposing 21 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.670096+07:00","@version":"1","message":"Registering MessageChannel errorChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.673991+07:00","@version":"1","message":"Registering MessageChannel nullChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.676214+07:00","@version":"1","message":"Registering MessageHandler _org.springframework.integration.errorLogger","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.692612+07:00","@version":"1","message":"Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.693137+07:00","@version":"1","message":"Channel 'authservice.errorChannel' has 1 subscriber(s).","logger_name":"org.springframework.integration.channel.PublishSubscribeChannel","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.693528+07:00","@version":"1","message":"started bean '_org.springframework.integration.errorLogger'","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.782097+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.812743+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.815056+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.821477+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.821682+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.821786+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.821869+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.821947+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.822024+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.822113+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.926058+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:18:59.969564+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.011432+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.015031+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.030175+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.033569+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.03732+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.03824+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1736158740038 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.040337+07:00","@version":"1","message":"Registering application AUTHSERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.040526+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736158740040, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.042629+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8101\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.043281+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.045734+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.047057+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.059713+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = UP, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@621a9821] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.074519+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.0751+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.081987+07:00","@version":"1","message":"Unregistering application AUTHSERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.082216+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736158740082, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.08275+07:00","@version":"1","message":"Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.08288+07:00","@version":"1","message":"Channel 'authservice.errorChannel' has 0 subscriber(s).","logger_name":"org.springframework.integration.channel.PublishSubscribeChannel","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.083052+07:00","@version":"1","message":"stopped bean '_org.springframework.integration.errorLogger'","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.083185+07:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.08245+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.084218+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.08462+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.084771+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = DOWN, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@621a9821] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.087133+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.087465+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:00.110129+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:02.098449+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:19:02.10246+07:00","@version":"1","message":"Using @ExceptionHandler ntcgoer.sharingmodule.exception.advice.GlobalExceptionHandler#handleConflictException(ConflictException)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:19:02.107944+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:19:02.108455+07:00","@version":"1","message":"Writing [ntcgoer.sharingmodule.exception.advice.HttpResponse@14b7487b]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:19:02.112008+07:00","@version":"1","message":"Resolved [ntcgoer.sharingmodule.exception.ConflictException: Email taken]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:19:02.11232+07:00","@version":"1","message":"Completed 409 CONFLICT","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-2","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"9ee35a755c18ff8471016a3517cd92f5","trace_flags":"01","span_id":"fa6912317f2447b7"}
{"@timestamp":"2025-01-06T17:19:03.116179+07:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:03.121909+07:00","@version":"1","message":"HTTP DELETE http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:03.124444+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:03.137201+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:03.138428+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:03.139094+07:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:03.197341+07:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:03.20986+07:00","@version":"1","message":"\n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nWeb server failed to start. Port 8101 was already in use.\n\nAction:\n\nIdentify and stop the process that's listening on port 8101 or configure this application to listen on another port.\n","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread_name":"main","level":"ERROR","level_value":40000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:22.930772+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:22.934578+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:22.938411+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@6b05d0b3]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:22.939756+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@6b05d0b3","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-3","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:25.100178+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:26.244952+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:31.568373+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158737929","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.567356+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.570079+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.575753+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.576376+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.577349+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.578171+07:00","@version":"1","message":"Attempting to connect to: [localhost:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-3","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:31.594046+07:00","@version":"1","message":"Response 404 NOT_FOUND","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.595266+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - Re-registering apps/AUTHSERVICE","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.595588+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.595845+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.596344+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.596582+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = UP, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7c1acacd] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.605653+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.60594+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:19:31.650254+07:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#6b861a26:0/SimpleConnection@15b5b088 [delegate=amqp://sa@127.0.0.1:5672/, localPort=60850]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-3","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:31.652307+07:00","@version":"1","message":"Initializing declarations","logger_name":"org.springframework.amqp.rabbit.core.RabbitAdmin","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:31.655319+07:00","@version":"1","message":"Nothing to declare","logger_name":"org.springframework.amqp.rabbit.core.RabbitAdmin","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:31.683092+07:00","@version":"1","message":"Creating cached Rabbit Channel from AMQChannel(amqp://sa@127.0.0.1:5672/,1)","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:31.688679+07:00","@version":"1","message":"Executing callback RabbitTemplate$$Lambda/0x0000000301cc9cc8 on RabbitMQ Channel: Cached Rabbit Channel: AMQChannel(amqp://sa@127.0.0.1:5672/,1), conn: Proxy@5b14ec53 Shared Rabbit Connection: SimpleConnection@15b5b088 [delegate=amqp://sa@127.0.0.1:5672/, localPort=60850]","logger_name":"org.springframework.amqp.rabbit.core.RabbitTemplate","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:31.690241+07:00","@version":"1","message":"Publishing message [(Body:'[B@7b81befe(byte[281])' MessageProperties [headers={}, contentType=text/plain, contentEncoding=UTF-8, contentLength=281, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])] on exchange [email_exchange], routingKey = [send_template_email_key]","logger_name":"org.springframework.amqp.rabbit.core.RabbitTemplate","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:31.701621+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:31.701817+07:00","@version":"1","message":"Nothing to write: null body","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:31.702187+07:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-3","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"8c6b7eab169c2873621c25acefaf668b","trace_flags":"01","span_id":"31fe451310405060"}
{"@timestamp":"2025-01-06T17:19:58.935914+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d53e0573d0c43432b9fb85a12d638c3e","trace_flags":"01","span_id":"d54d44d565954fdb"}
{"@timestamp":"2025-01-06T17:19:58.938969+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d53e0573d0c43432b9fb85a12d638c3e","trace_flags":"01","span_id":"d54d44d565954fdb"}
{"@timestamp":"2025-01-06T17:19:58.940885+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@3f2ba9e1]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d53e0573d0c43432b9fb85a12d638c3e","trace_flags":"01","span_id":"d54d44d565954fdb"}
{"@timestamp":"2025-01-06T17:19:58.942097+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@3f2ba9e1","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-4","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"d53e0573d0c43432b9fb85a12d638c3e","trace_flags":"01","span_id":"d54d44d565954fdb"}
{"@timestamp":"2025-01-06T17:20:01.027404+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d53e0573d0c43432b9fb85a12d638c3e","trace_flags":"01","span_id":"d54d44d565954fdb"}
{"@timestamp":"2025-01-06T17:20:01.029855+07:00","@version":"1","message":"Using @ExceptionHandler ntcgoer.sharingmodule.exception.advice.GlobalExceptionHandler#handleConflictException(ConflictException)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d53e0573d0c43432b9fb85a12d638c3e","trace_flags":"01","span_id":"d54d44d565954fdb"}
{"@timestamp":"2025-01-06T17:20:01.030597+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d53e0573d0c43432b9fb85a12d638c3e","trace_flags":"01","span_id":"d54d44d565954fdb"}
{"@timestamp":"2025-01-06T17:20:01.030866+07:00","@version":"1","message":"Writing [ntcgoer.sharingmodule.exception.advice.HttpResponse@1e395c95]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d53e0573d0c43432b9fb85a12d638c3e","trace_flags":"01","span_id":"d54d44d565954fdb"}
{"@timestamp":"2025-01-06T17:20:01.031632+07:00","@version":"1","message":"Resolved [ntcgoer.sharingmodule.exception.ConflictException: Email taken]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d53e0573d0c43432b9fb85a12d638c3e","trace_flags":"01","span_id":"d54d44d565954fdb"}
{"@timestamp":"2025-01-06T17:20:01.031829+07:00","@version":"1","message":"Completed 409 CONFLICT","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-4","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"d53e0573d0c43432b9fb85a12d638c3e","trace_flags":"01","span_id":"d54d44d565954fdb"}
{"@timestamp":"2025-01-06T17:20:01.587322+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:01.589521+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:01.595937+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:01.59656+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:01.6119+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:01.613644+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:01.619949+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:29.683337+07:00","@version":"1","message":"POST \"/v1/signup\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"e9cd217f2c1990df5f44cb2641a9f061","trace_flags":"01","span_id":"bf18fca7cb34af9f"}
{"@timestamp":"2025-01-06T17:20:29.686395+07:00","@version":"1","message":"Mapped to ntcgoer.authservice.controller.AuthController#signup(SignupRequestDto)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"e9cd217f2c1990df5f44cb2641a9f061","trace_flags":"01","span_id":"bf18fca7cb34af9f"}
{"@timestamp":"2025-01-06T17:20:29.688009+07:00","@version":"1","message":"Read \"application/json;charset=UTF-8\" to [ntcgoer.authservice.requestdto.SignupRequestDto@7195302f]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"e9cd217f2c1990df5f44cb2641a9f061","trace_flags":"01","span_id":"bf18fca7cb34af9f"}
{"@timestamp":"2025-01-06T17:20:29.688949+07:00","@version":"1","message":"Signup request received: ntcgoer.authservice.requestdto.SignupRequestDto@7195302f","logger_name":"ntcgoer.authservice.controller.AuthController","thread_name":"http-nio-8101-exec-5","level":"INFO","level_value":20000,"serviceName":"authservice","trace_id":"e9cd217f2c1990df5f44cb2641a9f061","trace_flags":"01","span_id":"bf18fca7cb34af9f"}
{"@timestamp":"2025-01-06T17:20:31.493017+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<ntcgoer.authservice.client.feignclient.feignclientresponse.VerifySignupDataClientResponse>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"e9cd217f2c1990df5f44cb2641a9f061","trace_flags":"01","span_id":"bf18fca7cb34af9f"}
{"@timestamp":"2025-01-06T17:20:31.607875+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:31.611091+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:31.623544+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:31.623831+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:31.625255+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:31.625542+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:31.627878+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:20:32.683264+07:00","@version":"1","message":"Reading to [ntcgoer.sharingmodule.exception.advice.HttpResponse<?>]","logger_name":"org.springframework.web.client.HttpMessageConverterExtractor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"e9cd217f2c1990df5f44cb2641a9f061","trace_flags":"01","span_id":"bf18fca7cb34af9f"}
{"@timestamp":"2025-01-06T17:20:37.295553+07:00","@version":"1","message":"Executing callback RabbitTemplate$$Lambda/0x0000000301cc9cc8 on RabbitMQ Channel: Cached Rabbit Channel: AMQChannel(amqp://sa@127.0.0.1:5672/,1), conn: Proxy@5b14ec53 Shared Rabbit Connection: SimpleConnection@15b5b088 [delegate=amqp://sa@127.0.0.1:5672/, localPort=60850]","logger_name":"org.springframework.amqp.rabbit.core.RabbitTemplate","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"e9cd217f2c1990df5f44cb2641a9f061","trace_flags":"01","span_id":"bf18fca7cb34af9f"}
{"@timestamp":"2025-01-06T17:20:37.297976+07:00","@version":"1","message":"Publishing message [(Body:'[B@747ad7af(byte[281])' MessageProperties [headers={}, contentType=text/plain, contentEncoding=UTF-8, contentLength=281, deliveryMode=PERSISTENT, priority=0, deliveryTag=0])] on exchange [email_exchange], routingKey = [send_template_email_key]","logger_name":"org.springframework.amqp.rabbit.core.RabbitTemplate","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"e9cd217f2c1990df5f44cb2641a9f061","trace_flags":"01","span_id":"bf18fca7cb34af9f"}
{"@timestamp":"2025-01-06T17:20:37.300788+07:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"e9cd217f2c1990df5f44cb2641a9f061","trace_flags":"01","span_id":"bf18fca7cb34af9f"}
{"@timestamp":"2025-01-06T17:20:37.301189+07:00","@version":"1","message":"Nothing to write: null body","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"e9cd217f2c1990df5f44cb2641a9f061","trace_flags":"01","span_id":"bf18fca7cb34af9f"}
{"@timestamp":"2025-01-06T17:20:37.301728+07:00","@version":"1","message":"Completed 200 OK","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8101-exec-5","level":"DEBUG","level_value":10000,"serviceName":"authservice","trace_id":"e9cd217f2c1990df5f44cb2641a9f061","trace_flags":"01","span_id":"bf18fca7cb34af9f"}
{"@timestamp":"2025-01-06T17:21:01.631177+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:01.631219+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:01.633577+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:01.633668+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:01.638979+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:01.639815+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:01.644358+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:31.645402+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:31.646588+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:31.648907+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:31.648907+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:31.655373+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:31.655393+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:21:31.656119+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:01.660681+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:01.660161+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:01.664861+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:01.664861+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:01.672633+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:01.672602+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:01.674896+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:31.698505+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:31.698505+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:31.701683+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:31.701684+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:31.709625+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:31.709625+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:22:31.710529+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:01.725292+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:01.725292+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:01.733162+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:01.733162+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:01.741325+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:01.741336+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:01.742379+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:31.748566+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:31.748566+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:31.756655+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:31.756655+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:31.764574+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:31.764573+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:31.76556+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:23:57.819063+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:01.772268+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:01.772268+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:01.774535+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:01.774535+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:01.780462+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:01.780462+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:01.781245+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:31.790427+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:31.790427+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:31.797392+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:31.797392+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:31.828636+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:31.828636+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:24:31.829644+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:01.835985+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:01.835939+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:01.839123+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:01.839123+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:01.84406+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:01.84409+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:01.844603+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:31.850993+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:31.850993+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:31.853899+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:31.8539+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:31.859443+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:31.859493+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:25:31.860086+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:01.867042+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101?status=UP&lastDirtyTimestamp=1736158771595","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:01.867042+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:01.870541+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:01.870541+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:01.877305+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:01.877305+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:01.878195+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.688815+07:00","@version":"1","message":"Unregistering application AUTHSERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.689537+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736159177689, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.689808+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.690048+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/AUTHSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.69071+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.690962+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:authservice:8101, appName = AUTHSERVICE, hostName = 192.168.1.100, status = DOWN, ipAddr = 192.168.1.100, port = 8101, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@7c1acacd] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.696276+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.696766+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.697549+07:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.700563+07:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.709792+07:00","@version":"1","message":"Closing cached Channel: AMQChannel(amqp://sa@127.0.0.1:5672/,1)","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.737326+07:00","@version":"1","message":"Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.737573+07:00","@version":"1","message":"Channel 'authservice.errorChannel' has 0 subscriber(s).","logger_name":"org.springframework.integration.channel.PublishSubscribeChannel","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.737782+07:00","@version":"1","message":"stopped bean '_org.springframework.integration.errorLogger'","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:17.754428+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:20.760553+07:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:20.764706+07:00","@version":"1","message":"HTTP DELETE http://localhost:8765/eureka/apps/AUTHSERVICE/192.168.1.100:authservice:8101","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:20.766806+07:00","@version":"1","message":"Accept=[application/json, application/yaml, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:20.774244+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:20.775118+07:00","@version":"1","message":"DiscoveryClient_AUTHSERVICE/192.168.1.100:authservice:8101 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
{"@timestamp":"2025-01-06T17:26:20.775585+07:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"authservice"}
