{"@timestamp":"2025-01-10T17:17:06.771864+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:06.796799+07:00","@version":"1","message":"Starting EmailServiceApplication using Java 23.0.1 with PID 18644 (/Users/ligyn-004/Documents/Personal/nevpre/backend/email-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.emailservice.EmailServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:06.797533+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.emailservice.EmailServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:06.818545+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:06.818843+07:00","@version":"1","message":"Located environment: name=emailservice, profiles=[default], label=null, version=ca59b3db5e15f9cc3ea6fe69eb5eb940bf6e4533, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:06.818978+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:06.819076+07:00","@version":"1","message":"Located environment: name=emailservice, profiles=[local], label=null, version=ca59b3db5e15f9cc3ea6fe69eb5eb940bf6e4533, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.306515+07:00","@version":"1","message":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.310059+07:00","@version":"1","message":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.371296+07:00","@version":"1","message":"BeanFactory id=f0499cff-b0b8-389d-a724-95d6421e9865","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.403631+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [integrationMbeanExporter] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.407113+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.407689+07:00","@version":"1","message":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.408057+07:00","@version":"1","message":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.408953+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.409218+07:00","@version":"1","message":"Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x00000ff801586738] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.409629+07:00","@version":"1","message":"Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.409866+07:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.410341+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.410623+07:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000ff801586958] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.41095+07:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.415337+07:00","@version":"1","message":"Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.417103+07:00","@version":"1","message":"Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.420342+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.421177+07:00","@version":"1","message":"Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.737531+07:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'templateEmailReceiver' defined in file [/Users/ligyn-004/Documents/Personal/nevpre/backend/email-service/target/classes/ntcgoer/emailservice/reiceiver/TemplateEmailReceiver.class]: Bean named 'templateEmailContainer' is expected to be of type 'org.springframework.amqp.rabbit.listener.RabbitListenerContainerFactory' but was actually of type 'org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer'","logger_name":"org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.746872+07:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:17:07.753606+07:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'templateEmailReceiver' defined in file [/Users/ligyn-004/Documents/Personal/nevpre/backend/email-service/target/classes/ntcgoer/emailservice/reiceiver/TemplateEmailReceiver.class]: Bean named 'templateEmailContainer' is expected to be of type 'org.springframework.amqp.rabbit.listener.RabbitListenerContainerFactory' but was actually of type 'org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer'\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)\n\tat ntcgoer.emailservice.EmailServiceApplication.main(EmailServiceApplication.java:12)\nCaused by: org.springframework.beans.factory.BeanNotOfRequiredTypeException: Bean named 'templateEmailContainer' is expected to be of type 'org.springframework.amqp.rabbit.listener.RabbitListenerContainerFactory' but was actually of type 'org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer'\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.adaptBeanInstance(AbstractBeanFactory.java:421)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:402)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)\n\tat org.springframework.amqp.rabbit.annotation.RabbitListenerAnnotationBeanPostProcessor.resolveContainerFactory(RabbitListenerAnnotationBeanPostProcessor.java:551)\n\tat org.springframework.amqp.rabbit.annotation.RabbitListenerAnnotationBeanPostProcessor.processListener(RabbitListenerAnnotationBeanPostProcessor.java:480)\n\tat org.springframework.amqp.rabbit.annotation.RabbitListenerAnnotationBeanPostProcessor.processAmqpListener(RabbitListenerAnnotationBeanPostProcessor.java:392)\n\tat org.springframework.amqp.rabbit.annotation.RabbitListenerAnnotationBeanPostProcessor.postProcessAfterInitialization(RabbitListenerAnnotationBeanPostProcessor.java:310)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:439)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1811)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)\n\t... 17 common frames omitted\n","serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.025349+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.052338+07:00","@version":"1","message":"Starting EmailServiceApplication using Java 23.0.1 with PID 18936 (/Users/ligyn-004/Documents/Personal/nevpre/backend/email-service/target/classes started by ligyn-004 in /Users/ligyn-004/Documents/Personal/nevpre/backend)","logger_name":"ntcgoer.emailservice.EmailServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.052941+07:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"ntcgoer.emailservice.EmailServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.070887+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.071162+07:00","@version":"1","message":"Located environment: name=emailservice, profiles=[default], label=null, version=ca59b3db5e15f9cc3ea6fe69eb5eb940bf6e4533, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.071315+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.07141+07:00","@version":"1","message":"Located environment: name=emailservice, profiles=[local], label=null, version=ca59b3db5e15f9cc3ea6fe69eb5eb940bf6e4533, state=","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.515986+07:00","@version":"1","message":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.519086+07:00","@version":"1","message":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","logger_name":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.577008+07:00","@version":"1","message":"BeanFactory id=f0499cff-b0b8-389d-a724-95d6421e9865","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.608054+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [integrationMbeanExporter] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.611767+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.612439+07:00","@version":"1","message":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.612894+07:00","@version":"1","message":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.613787+07:00","@version":"1","message":"Bean 'org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.614109+07:00","@version":"1","message":"Bean 'rabbitExtendedPropertiesDefaultMappingsProvider' of type [org.springframework.cloud.stream.binder.rabbit.config.ExtendedBindingHandlerMappingsProviderConfiguration$$Lambda/0x00001f0001583de0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.614505+07:00","@version":"1","message":"Bean 'BindingHandlerAdvise' of type [org.springframework.cloud.stream.config.BindingHandlerAdvise] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.614743+07:00","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.615219+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.615488+07:00","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00001f0001586230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.615822+07:00","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.620255+07:00","@version":"1","message":"Bean 'spelConverter' of type [org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration$SpelConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.622761+07:00","@version":"1","message":"Bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties' of type [org.springframework.boot.autoconfigure.jmx.JmxProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.625633+07:00","@version":"1","message":"Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.626466+07:00","@version":"1","message":"Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [integrationMbeanExporter]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:46.984766+07:00","@version":"1","message":"Patterns [/webjars/**, /**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.reactive.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.129805+07:00","@version":"1","message":"Exposing 21 endpoints beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.140429+07:00","@version":"1","message":"37 mappings in 'webEndpointReactiveHandlerMapping'","logger_name":"org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.182246+07:00","@version":"1","message":"ControllerAdvice beans: none","logger_name":"org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.19309+07:00","@version":"1","message":"enableLoggingRequestDetails='false': form data and headers will be masked to prevent unsafe logging of potentially sensitive data","logger_name":"org.springframework.web.server.adapter.HttpWebHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.32657+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.343643+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.399875+07:00","@version":"1","message":"Registering MessageChannel errorChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.403376+07:00","@version":"1","message":"Registering MessageChannel nullChannel","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.405228+07:00","@version":"1","message":"Registering MessageHandler _org.springframework.integration.errorLogger","logger_name":"org.springframework.integration.monitor.IntegrationMBeanExporter","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.409776+07:00","@version":"1","message":"Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.409999+07:00","@version":"1","message":"Channel 'emailservice.errorChannel' has 1 subscriber(s).","logger_name":"org.springframework.integration.channel.PublishSubscribeChannel","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.410151+07:00","@version":"1","message":"started bean '_org.springframework.integration.errorLogger'","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.42519+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.435253+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.436973+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.440372+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.440478+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.440558+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.440626+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.440698+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.440767+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.44083+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.473218+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.491613+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.509889+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.510747+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"main","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.518421+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.51914+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.519792+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.520226+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1736504627520 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.521815+07:00","@version":"1","message":"Registering application EMAILSERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.522056+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736504627522, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.522551+07:00","@version":"1","message":"DiscoveryClient_EMAILSERVICE/192.168.1.100:emailservice:8010: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.52401+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/EMAILSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.52475+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.531393+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:emailservice:8010, appName = EMAILSERVICE, hostName = 192.168.1.100, status = UP, ipAddr = 192.168.1.100, port = 8010, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@2b185067] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.539848+07:00","@version":"1","message":"Response 204 NO_CONTENT","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.540038+07:00","@version":"1","message":"DiscoveryClient_EMAILSERVICE/192.168.1.100:emailservice:8010 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.566439+07:00","@version":"1","message":"Netty started on port 8010 (http)","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.567098+07:00","@version":"1","message":"Updating port to 8010","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.573708+07:00","@version":"1","message":"Attempting to connect to: [localhost:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.595327+07:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#d02c00:0/SimpleConnection@6a450cb5 [delegate=amqp://sa@127.0.0.1:5672/, localPort=54244]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.598783+07:00","@version":"1","message":"Auto-declaring a non-durable, auto-delete, or exclusive Queue (send_raw_string_email_queue) durable:false, auto-delete:false, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.","logger_name":"org.springframework.amqp.rabbit.core.RabbitAdmin","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.59889+07:00","@version":"1","message":"Auto-declaring a non-durable, auto-delete, or exclusive Queue (send_template_email_queue) durable:false, auto-delete:false, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.","logger_name":"org.springframework.amqp.rabbit.core.RabbitAdmin","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:23:47.674451+07:00","@version":"1","message":"Started EmailServiceApplication in 5.123 seconds (process running for 5.69)","logger_name":"ntcgoer.emailservice.EmailServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:17.54195+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:17.54679+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010?status=UP&lastDirtyTimestamp=1736504627521","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:17.549742+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:17.569617+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:17.570689+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:17.571101+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:17.577088+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:45.125833+07:00","@version":"1","message":"Execution of Rabbit message listener failed.","logger_name":"org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler","thread_name":"templateEmailContainer-1","level":"WARN","level_value":30000,"stack_trace":"org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Failed to invoke target method 'sendMessage' with argument type = [class java.lang.String], value = [{{\"toEmail\":\"cuongnt.dev.2501+10@gmail.com\",\"subject\":\"Verify Email\",\"template\":\"VERIFY_EMAIL_SIGN_UP\",\"data\":{\"userName\":\"cuongnt.dev.2501+10@gmail.com\",\"verifyUrl\":\"http://localhost:8080/verify-email?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzY1OTEwNTAsImlzcyI6ImF1dGhzZXJ2aWNlIiwiaWF0IjoxNzM2NTA0NjUwLCJhY2NvdW50SWQiOiI4YTM2MDMwOS1hYTE2LTQzNWYtYThiYS05NzdmNjNhZWI3YzgiLCJlbWFpbCI6ImN1b25nbnQuZGV2LjI1MDErMTBAZ21haWwuY29tIn0.uAcydJp7E-i-tmcFUXuqrIEGQGQ-8zZZByLsa-1DM6Q\"}}}]\n\tat org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter.invokeListenerMethod(MessageListenerAdapter.java:388)\n\tat org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter.onMessage(MessageListenerAdapter.java:294)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1682)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1604)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1592)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1583)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1528)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1506)\n\tat io.micrometer.observation.Observation.observe(Observation.java:498)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1506)\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:1086)\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:1022)\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1425)\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1326)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: java.lang.NoSuchMethodException: ntcgoer.emailservice.reiceiver.RawStringEmailReceiver.sendMessage(java.lang.String)\n\tat java.base/java.lang.Class.getMethod(Class.java:2454)\n\tat org.springframework.util.MethodInvoker.prepare(MethodInvoker.java:186)\n\tat org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter.invokeListenerMethod(MessageListenerAdapter.java:366)\n\t... 14 common frames omitted\n","serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:45.13278+07:00","@version":"1","message":"Fatal message conversion error; message rejected; it will be dropped or routed to a dead letter exchange, if so configured: (Body:'[B@7f299fc9(byte[486])' MessageProperties [headers={traceparent=00-62014cb082657f4e7840123af1928a0f-f2fd6ed15ce9844a-01}, contentType=text/plain, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=email_exchange, receivedRoutingKey=send_template_email_key, deliveryTag=1, consumerTag=amq.ctag-PmMxkc_URtwpIiwDNIfdfw, consumerQueue=send_template_email_queue])","logger_name":"org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler$DefaultExceptionStrategy","thread_name":"templateEmailContainer-1","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:45.133193+07:00","@version":"1","message":"Execution of Rabbit message listener failed, and the error handler threw an exception","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"templateEmailContainer-1","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.amqp.AmqpRejectAndDontRequeueException: Error Handler converted exception to fatal\n\tat org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.handleError(ConditionalRejectingErrorHandler.java:148)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:1475)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.handleListenerException(AbstractMessageListenerContainer.java:1768)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1549)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1506)\n\tat io.micrometer.observation.Observation.observe(Observation.java:498)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1506)\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:1086)\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:1022)\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1425)\n\tat org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1326)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Failed to invoke target method 'sendMessage' with argument type = [class java.lang.String], value = [{{\"toEmail\":\"cuongnt.dev.2501+10@gmail.com\",\"subject\":\"Verify Email\",\"template\":\"VERIFY_EMAIL_SIGN_UP\",\"data\":{\"userName\":\"cuongnt.dev.2501+10@gmail.com\",\"verifyUrl\":\"http://localhost:8080/verify-email?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzY1OTEwNTAsImlzcyI6ImF1dGhzZXJ2aWNlIiwiaWF0IjoxNzM2NTA0NjUwLCJhY2NvdW50SWQiOiI4YTM2MDMwOS1hYTE2LTQzNWYtYThiYS05NzdmNjNhZWI3YzgiLCJlbWFpbCI6ImN1b25nbnQuZGV2LjI1MDErMTBAZ21haWwuY29tIn0.uAcydJp7E-i-tmcFUXuqrIEGQGQ-8zZZByLsa-1DM6Q\"}}}]\n\tat org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter.invokeListenerMethod(MessageListenerAdapter.java:388)\n\tat org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter.onMessage(MessageListenerAdapter.java:294)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1682)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1604)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1592)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1583)\n\tat org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1528)\n\t... 8 common frames omitted\nCaused by: java.lang.NoSuchMethodException: ntcgoer.emailservice.reiceiver.RawStringEmailReceiver.sendMessage(java.lang.String)\n\tat java.base/java.lang.Class.getMethod(Class.java:2454)\n\tat org.springframework.util.MethodInvoker.prepare(MethodInvoker.java:186)\n\tat org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter.invokeListenerMethod(MessageListenerAdapter.java:366)\n\t... 14 common frames omitted\n","serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:47.579246+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010?status=UP&lastDirtyTimestamp=1736504627521","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:47.579228+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:47.581007+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:47.581777+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:47.588877+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:47.588735+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:24:47.589752+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:17.598093+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:17.598088+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010?status=UP&lastDirtyTimestamp=1736504627521","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:17.603116+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:17.603116+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:17.611927+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:17.611928+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:17.61448+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:47.624206+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:47.624207+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010?status=UP&lastDirtyTimestamp=1736504627521","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:47.650344+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:47.650344+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:47.657087+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:47.657087+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:25:47.657783+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:17.667543+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:17.667542+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010?status=UP&lastDirtyTimestamp=1736504627521","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:17.70318+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:17.70318+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:17.708447+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:17.708447+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:17.708912+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:47.723417+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:47.723417+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010?status=UP&lastDirtyTimestamp=1736504627521","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:47.727483+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:47.727484+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:47.733904+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:47.733904+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:26:47.734652+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:17.731436+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:17.731444+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010?status=UP&lastDirtyTimestamp=1736504627521","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:17.735286+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:17.73529+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:17.741751+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:17.741751+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:17.742759+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:47.747009+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010?status=UP&lastDirtyTimestamp=1736504627521","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:47.747008+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:47.751552+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:47.751209+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:47.759648+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:47.759648+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:27:47.761003+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:17.768049+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010?status=UP&lastDirtyTimestamp=1736504627521","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:17.768049+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:17.771727+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:17.772072+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:17.77845+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:17.77845+07:00","@version":"1","message":"Response 200 OK","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:17.77989+07:00","@version":"1","message":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.42143+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.786168+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.786166+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010?status=UP&lastDirtyTimestamp=1736504627521","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.787927+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.787927+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.808324+07:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8765/eureka/} exception=I/O error on PUT request for \"http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:119)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:845)\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1402)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:760)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 20 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.80833+07:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8765/eureka/} exception=I/O error on GET request for \"http://localhost:8765/eureka/apps/delta\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8765/eureka/apps/delta\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:174)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:186)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1080)\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:963)\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1441)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:760)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 23 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.809146+07:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.809151+07:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8765/eureka/apps/delta\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.814603+07:00","@version":"1","message":"HTTP GET http://localhost:8765/eureka/apps/delta","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.814554+07:00","@version":"1","message":"HTTP PUT http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010?status=UP&lastDirtyTimestamp=1736504627521","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.8222+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.823531+07:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8765/eureka/}, exception=I/O error on PUT request for \"http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:119)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:845)\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1402)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:760)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 21 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.824011+07:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.82445+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.824229+07:00","@version":"1","message":"DiscoveryClient_EMAILSERVICE/192.168.1.100:emailservice:8010 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-%d","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:845)\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1402)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\n","serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.825454+07:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8765/eureka/}, exception=I/O error on GET request for \"http://localhost:8765/eureka/apps/delta\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8765/eureka/apps/delta\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:174)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:186)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1080)\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:963)\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1441)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:760)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 24 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.825895+07:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8765/eureka/apps/delta\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:47.826194+07:00","@version":"1","message":"DiscoveryClient_EMAILSERVICE/192.168.1.100:emailservice:8010 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1080)\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:963)\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1441)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-%d","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.0536+07:00","@version":"1","message":"Unregistering application EMAILSERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.053974+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1736504929053, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.054238+07:00","@version":"1","message":"DiscoveryClient_EMAILSERVICE/192.168.1.100:emailservice:8010: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.056335+07:00","@version":"1","message":"HTTP POST http://localhost:8765/eureka/apps/EMAILSERVICE","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.056656+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.058858+07:00","@version":"1","message":"Writing [InstanceInfo [instanceId = 192.168.1.100:emailservice:8010, appName = EMAILSERVICE, hostName = 192.168.1.100, status = DOWN, ipAddr = 192.168.1.100, port = 8010, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@2b185067] as \"application/json\"","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.061179+07:00","@version":"1","message":"Waiting for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"rawStringEmailContainer-2","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.06151+07:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8765/eureka/}, exception=I/O error on POST request for \"http://localhost:8765/eureka/apps/EMAILSERVICE\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8765/eureka/apps/EMAILSERVICE\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:87)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)\n\tat com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:760)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 23 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.061889+07:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8765/eureka/apps/EMAILSERVICE\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.061995+07:00","@version":"1","message":"DiscoveryClient_EMAILSERVICE/192.168.1.100:emailservice:8010 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)\n\tat com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\n","serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.062178+07:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)\n\tat com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\n","serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.062875+07:00","@version":"1","message":"Waiting for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"templateEmailContainer-2","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.064253+07:00","@version":"1","message":"Waiting for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.620754+07:00","@version":"1","message":"Successfully waited for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.669201+07:00","@version":"1","message":"Successfully waited for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"rawStringEmailContainer-2","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.978888+07:00","@version":"1","message":"Successfully waited for workers to finish.","logger_name":"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer","thread_name":"templateEmailContainer-2","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.983193+07:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.netty.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:49.989065+07:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.netty.GracefulShutdown","thread_name":"netty-shutdown","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:52.071356+07:00","@version":"1","message":"Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:52.071873+07:00","@version":"1","message":"Channel 'emailservice.errorChannel' has 0 subscriber(s).","logger_name":"org.springframework.integration.channel.PublishSubscribeChannel","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:52.072317+07:00","@version":"1","message":"stopped bean '_org.springframework.integration.errorLogger'","logger_name":"org.springframework.integration.endpoint.EventDrivenConsumer","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:52.090254+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:55.095922+07:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:55.101191+07:00","@version":"1","message":"HTTP DELETE http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:55.101839+07:00","@version":"1","message":"Accept=[application/json, application/*+json]","logger_name":"org.springframework.web.client.RestTemplate","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:55.104016+07:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8765/eureka/}, exception=I/O error on DELETE request for \"http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:100)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:668)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:625)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1368)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:584)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1361)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)\n\tat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:760)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:216)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:174)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:141)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 38 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:55.104334+07:00","@version":"1","message":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8765/eureka/apps/EMAILSERVICE/192.168.1.100:emailservice:8010\": Connect to http://localhost:8765 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:55.104473+07:00","@version":"1","message":"DiscoveryClient_EMAILSERVICE/192.168.1.100:emailservice:8010 - de-registration failedCannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:668)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:625)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1368)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:584)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1361)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)\n\tat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.doClose(ReactiveWebServerApplicationContext.java:149)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\n","serviceName":"emailservice"}
{"@timestamp":"2025-01-10T17:28:55.104875+07:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"serviceName":"emailservice"}
